<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Atlas&#39; Blog</title>
  
  <subtitle>三七的深夜食堂</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://atlasquan.github.io/"/>
  <updated>2021-09-27T18:33:32.677Z</updated>
  <id>https://atlasquan.github.io/</id>
  
  <author>
    <name>Atlas</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>人可生如蝼蚁而美如神</title>
    <link href="https://atlasquan.github.io/2021/09/27/human/"/>
    <id>https://atlasquan.github.io/2021/09/27/human/</id>
    <published>2021-09-27T01:55:00.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>忙中抽闲整理一些近期关于生命的感触，因为我觉得我必须写作。</p><p>曾经的我不认可生命有任何意义，所谓的意义都是人们自己抬举自己牵强附会出来的；如果人生来就应该有什么目标，那就只有追求快乐。不过并不要因此觉得曾经的我消极怠惰，对人生毫无信心，只是我并不在意生命的意义这种问题，有没有意义对那时我的来说和这一生当如何度过毫无关系。大体上来说现在的我依然这么想，但是我不再会坚决的否认生命拥有意义，也不会觉得快乐是人生的目标。</p><p>快乐是很重要的事情，就算在黑暗和悲伤中我们也要尽量去体会所有真诚的快乐，但是这不是人生的目标，而是活着的每分每秒的状态。目标是未实现的去追求的事情，但状态，是无时无刻身在其中的。没有人规定这一生必须要完成什么必须要拥有什么，不需要因为出生在哪里就必须热爱哪里，不需要因为拥有子宫就必须受孕，但是人类作为一种社会性动物，很可能会自发地在某个时刻感受到自己的使命，如果一定要说这个使命是谁赋予的，那么就是整个人类社会。It’s my duty. 这份使命大多很复杂，又很困难，但是去勇敢的面对是这世间唯一的英雄主义：看清生活的真相却依然热爱它。</p><p>此刻的我感受到，去写作，是我的使命的一部分。我必须写作。我的观察能力和写作能力都还不足够让我满意，但是我必须开始写作。</p><h2 id="想要有尊严的活"><a href="#想要有尊严的活" class="headerlink" title="想要有尊严的活"></a>想要有尊严的活</h2><p>安乐死，是一个每一次去医院病房我都会有感触的话题。</p><p>我理解的安乐死本质无关乎活着的痛苦程度，只关乎尊严。换句话说，活着的每一天都比前一天更痛苦并且没有逆转的可能，这不是选择安乐死的原因，选择安乐死的原因是感觉到自己的生活质量已经下降到丧失了作为一个人的基本尊严的程度。</p><p>中国社会流传很多关于拔管子的黑色笑话，可是换个角度想为什么非要走到那一步呢。生活早就无法自理，被疾病和痛苦已经折磨到记忆和精神都恍惚，甚至包括自己的所有人都在等待着身体彻底被疾病吞噬尽的那一天……非要等到那一天再拔管子吗？就为了成全在世的人的“孝”？</p><p>我只是，对于人一定要经历完全丧失尊严的生命状态才能走向死亡感到悲伤和无奈。我们值得有尊严的活，我是说，所有活着的时候，我们都想。</p><h2 id="也想要有尊严的死"><a href="#也想要有尊严的死" class="headerlink" title="也想要有尊严的死"></a>也想要有尊严的死</h2><p>多年唯物主义教育的浸润，让我坚信死亡就是结束，就是再也不存在。</p><p>人天然会恐惧死亡，会抗拒自我的消失。但是如果死亡就是结束，那等到真正自我消失的那一天，就已经什么都感觉不到了，也无所谓害怕或不害怕，而活着的每一天自我都没有消失，也不需要害怕。这种想法很长时间让我持有“未知生，焉知死”的人生态度，让我很少认真的思考死亡这个话题。</p><p>可是当生命的无常真实的铺展在眼前的时候，我很难说出死亡就是再也不相见这种话。今年7月，看到郑州暴雨里人们被困在地铁里的报道的时候，我尝试着去想象那种身处密闭空间即将被上涨的水位淹没而后窒息的绝望感，胆寒心颤。那一瞬间我想到的是：我们想要有尊严的活，也想要有尊严的死。我清楚死亡是再也不存在，我受过完整的现代自然科学的教育，可是一想到那些溺亡的生命临终前的惊恐错愕与绝望，我不由自主地希望有一场大型的超度仪式。我知道逝者已矣，而活着的人需要一个交代，悼亡可以有很多种意义，最重要的意义一定是针对活着的人。这些我都明白，但是当我想有这场仪式的时候，我首先想到的只有愿亡灵安息。并不是这最重要，而是情感上这最直接。</p><p>我知道不存在亡灵，也无所谓安息不安息。可是这么想会觉得太无力了。超度只是自己骗自己，可是人类就是这样的生物啊，是不是欺骗这一点也不重要，甚至想要的只是有一个骗自己的机会。</p><p>可能超度听起来有很浓厚的宗教色彩，但是我在这里说的东西与宗教无关，只是一种虔诚的仪式。事实上我作为一名在无神论环境下长大的无神论者，根本不懂宗教，但是我想人类的情感本质是互通的，尤其是在面对死亡的时候，而在这一点上，宗教具体而直白的的满足了人们寻找寄托的精神需求。</p><p>虽然说了这么多，不过回到现实我也不觉得应该举办任何超度仪式，牵扯到现实的事情就复杂太多了。但是至少，下个清明，请让我去京广北路隧道，沙口路站祭你，带上鲜花，和酒。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>那些看似弱不禁风彷徨犹豫却又时常展现出千军万马也无法阻挡的勇气和力量的人，总是让我着迷，正如干枯坚硬的岩石缝隙里挤出来的野草，总是使我驻足欣赏。我们虽然弱小渺小，但是仍然可以迸发出生命的力量，这种人可生如蝼蚁而美如神的感动总是使我迷恋。</p><p>虽然文章主体内容和标题关系不大，但是正是因为我赞叹生命的力量，所以才希望不管是生还是死，生命都能够有基本的尊严。</p><p>生命是一个一直被经历的过程，每时每刻所有人，所有活着的人，都在经历着。从懵懂到突然有一天意识到人终有一死的体验，我们都曾有过，可能是想到了自己会有一天死去，可能是想到了父母有一天也会死去，总之，从那天开始，我们对生命有了具体的认识。这之后随着看过更多的众生百态，经历过更多的人间百味，我们对生命的理解也一点点的在发生变化，变得更加深刻，更加丰富。因而对生命的感触也一定不会是一成不变的，每一个阶段都会有不同的体验。我珍惜每一个阶段的认知，尽管今天的想法明天并不会完全认可，不过至少现在的想法，我想要好好的表达出来。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>想写这篇文章的最初契机是今年7月郑州大雨暴雨地铁遇难者头七的时候（哦真是脱稿好久了orz），看到沙口站口摆满的鲜花的那张<a href="https://ipfs.subutai.io/ipfs/QmWreZnTeYNVqgcVpXPuDeTDwRuRx2GzpjvxRkLtvSaFYY/E7TypltXIAIyXIZ.jpg" target="_blank" rel="noopener">照片</a>大受感动，加上那段时间我时常去医院探病，就有了一些乱七八糟的想法，写的很散乱，没有充分展开也没什么明显的主题，毕竟本身想法也不是很成体系，但是我依然有很强的表达欲望希望能够写出来。我必须写作。</p><p>我其实希望自己可以多写一些偏向对外界事物的认知的内容，而不总是关于自我认知的梳理，但是作为一名INFP，过强的Fi总是跳出来干扰自己…… Know yourself 固然重要，但是我也想要好好的了解现实世界。下次一定。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;忙中抽闲整理一些近期关于生命的感触，因为我觉得我必须写作。&lt;/p&gt;
&lt;p&gt;曾经的我不认可生命有任何意义，所谓的意义都是人们自己抬举自己牵强附会出来的；如果人生来就应该有什么目标，那就只有追求快乐。不过并不要因此觉得曾经的我消极怠惰，对人生毫无信心，只是我并不在意生命的意义这
      
    
    </summary>
    
    
    
      <category term="Misc" scheme="https://atlasquan.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>献出心脏 直到高墙倒塌</title>
    <link href="https://atlasquan.github.io/2021/06/05/commit-my-heart/"/>
    <id>https://atlasquan.github.io/2021/06/05/commit-my-heart/</id>
    <published>2021-06-05T15:03:20.000Z</published>
    <updated>2021-09-27T18:33:32.673Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>四千多字的一篇博客居然前前后后写了一个月，倒不是没有思路，就是和自己经历相关的文字，可能会抑制不住的想要反复补充修改，而且常常写着写着会思绪飘移，开始回顾一些其他事情…总之最后终于下定决心无论如何一定要写完了！</p></blockquote><p>标题借用了进击的巨人里的一句经典台词，“献出心脏”。可能有点浮夸（毕竟日语嘛…），但是我想了半天，还是觉得这句话最适合我的心意，献出心脏，为自由，为平等，为Web 3.0。怀着对未来愉快的勇气，我决定写下这篇博客记录这一路的走走停停。鸡蛋和高墙当然选择站在鸡蛋的一边，我们不会放弃，我们前赴后继。</p><h2 id="那天我们想起被巨人们支配的恐惧"><a href="#那天我们想起被巨人们支配的恐惧" class="headerlink" title="那天我们想起被巨人们支配的恐惧"></a>那天我们想起被巨人们支配的恐惧</h2><p>刚加入RSS3的时候，兔子问我对开源的追求这么纯粹是受过什么人的影响吗。固然天性喜欢合作与分享，讨厌集权和垄断，但是能够有一些具体的想法与实践，确实是很幸运的受到遇到了一些引路人的。当然影响最大的是Aaron Swartz，那个哭着看完<a href="https://movie.douban.com/subject/25785114/" target="_blank" rel="noopener">互联网之子</a>的夜晚我想我会用余生去铭记，我痛恨这个充满谎言的世界，让为众人抱薪者冻毙于风雪；我鼓舞于Aaron炙热的理想主义，为了促进社会公正去无私战斗的勇气；我羡慕他的才华，也心痛他的绝望；我兴奋于这个世界曾经有过这样闪闪发光的人，也悲伤于最后是以他的短暂的一生的纪录片这种方式认识他。</p><p>另外一位对我影响很大的人，是我在 <a href="https://tecnico.ulisboa.pt/en/" target="_blank" rel="noopener">IST</a> 做交换生期间的同学。这个世界上总是不缺一些奇怪的人，他绝对是其中之一。他是一个比现在的我对开源的追求还要纯粹的多的人。他不使用Google，Facebook等社交媒体，不使用MacBook，他的笔记本操作系统是Linux，他使用Emacs写presentation，比起Github更倾向使用 Gitlab。最初认识他是因为选的一门课的大作业需要找队友，我就去和看上去形单影只的他搭话。在第一天认识他的时候他和我讲与其说是我们使用 Facebook，不如说是 Facebook 使用我们，然后提出使用 Riot.im（现在叫Element.io）进行团队交流。以当时的我对安全的通信软件的理解，只知道Telegram。然后他告诉我Telegram服务端是不开源的，Telegram不是去中心化的，Riot是去中心化的，Telegram的注册需要手机号，Riot只需要邮箱。虽然我痛恨满口谎言的 Google 说着 don’t do evil 却一直在 do evil，但那时的我主力浏览器依然是Chrome。他和我说如果真的不习惯 Firefox，可以使用 <a href="https://www.chromium.org/getting-involved/download-chromium" target="_blank" rel="noopener">Chromium</a>，它可以同步 Google 账号，但是是开源的。（现在我的主力浏览器也是Firefox了，当时有一点 Firefox 很古早很难用的刻板印象，但其实并不会）也是他让我知道了 GenLib，并且给我讲了很多微软/谷歌的版权之恶。可以说是他真正领我进入了开源和去中心化的世界。我很幸运遇见这样的人，也很幸运知道世界上原来有这样的人。</p><p>若曾经看过光明，如何能再习惯黑暗。见过那些在黑暗中负重前行，与巨人们作战的同胞，怎么能继续选择装聋作哑。沉默从来不是中立，沉默就是把选票投给了高墙。</p><h2 id="结束是另一个开始"><a href="#结束是另一个开始" class="headerlink" title="结束是另一个开始"></a>结束是另一个开始</h2><p>去中心化所暗示的平等、合作、自治，如同洞穴外的阳光，曾刺痛我的双眼，让当时的我疯狂想要进入区块链的行业，只是因为区块链天然的具有去中心化特性。我参与区块链方向的research，也做区块链方向的intern。算来到现在入行两年多了，但是说实话，到后面我真的已经对区块链非常疲惫了，以致最后full time的求职意向完全不想考虑区块链了。我不是说对区块链技术没有兴趣了，而是说工作不想碰区块链了，因为国内币圈风气太差，加过的所有开发者社群最后都是币价交流社；很多项目方炒作区块链的概念装模作样的解决一些不痛不痒的问题，最后又落脚点在融资；完全的 Defi（去中心化金融）基本不可能真的在国内做下去；一些公司虽然是基于区块链做事，但是要么更注重联盟链，要么就算是基于公链也做的事情和去中心化也关系不大……总之一腔热血横冲直撞，花了很久才醒悟到区块链终究只是术，我想要的道不非在于此。</p><p>面对现实的无力感，苍白如烈日当空，让我开始迷惘；社交媒体每日上演的荒谬，让我几乎政治性抑郁；思考到底什么事情是最应该去做的，让我陷入焦虑；那段时间我常常突然对自己每天到底在干什么感到强烈的虚无，常常觉得自己离这个世界太遥远，对这个世界的认知太浅薄而虚幻。</p><p>我热爱这个世界，也热爱我的专业——计算机，但是不是因为技术，也不是因为趋势。最开始接触互联网不能完全说是意外，但绝不是兴趣使然的命中注定；审视自身，虽然我确实能够感受到对一些技术的兴趣，但是我完全不是一个能从纯技术中得到获取意义上的满足感的人；对计算机技术所暗示的充满科技感的赛博朋克般的未来世界，我从来没有过期待与痴迷；而所谓为了不被时代潮流抛弃所以要拥抱互联网这种论调，我更是向来不认可，时代，潮流，皆指向虚妄的概念，真实的惟有这世间的人。我热爱计算机，是因为最初的互联网曾经闪耀过的自由的光，是因为那些声明黑客宣言的自由的灵魂们，那些为了夺回用户的隐私和自由和巨头们对抗着的战士们，那些敏锐的察觉到这个世界存在的问题并大胆的用技术去探索实践一个更好的解决方案的骇客们，让我一直以来相信着指尖有改变世界的力量，哪怕是一点点。是靠着那一点点微弱但耀眼的，看到过再也无法忘记的光，我才一直没有转行。</p><p>但是那段时间，面对这个世界的极度无力感，真的让我很多次认真地思考换一个能够对世界产生更有意义的影响的行业。</p><p>日日夜夜，遥望星辰大海，我思考着，到底想要什么到底应该做什么。</p><blockquote><p>如果你能 decentralize 世上一件事物，而且只能是一種，你會選擇甚麼？我很認真地想過，不是因為有燈神幫我實現願望，而是因為力量微薄，即使花上餘生都不一定能成功；既然怎樣努力都不一定能 decentralize 一件事物，就更不可能貪心同時做多種，而必須集中力量到一點。</p></blockquote><p>直到8个月前读到文章<a href="https://matters.news/@ckxpress/%E7%84%A1%E5%A4%A7%E5%8F%B0%E7%9C%9F%E7%9B%B8-they-can-t-kill-us-all-bafyreieqqwdavbc5bowq2ogugj6bmzlyscim3bcezsiwaegxoefg2653dy" target="_blank" rel="noopener">無大台真相：They can’t kill us all</a> 里面抛出的这个问题，我感觉我仿佛抓住了什么。作者说金钱不是他的终极关怀，对我而言也是一样啊。尽管最初因为去中心化闯入区块链的世界，但是我渐渐发现，就算是对于Defi（去中心化金融），区块链与去中心化结合的典型应用场景，其实我也没有那么关心。尽管还是会在每个披萨节尽可能的表达一句敬贸易自由，尽管我热烈地期待着一个贸易自由的世界，但是我知道那不是我最想把我的生命投入去实现的愿望。</p><p>去中心化于我而言是梦开始的地方，是我想要的道，或者说非常接近我想要的道。到现在也有了一些尽管不算很多的技术积累，到底我还是想去做啊。我知道我很可能做不到，但是说到底做不做得到又有什么关系呢。正确的事情，值得去做的事情，去做了即意义本身，我只是想更强烈的感受到我活着，我真心实意的如此觉得。选择一样事物用一生去努力实现去中心化，要做的只是选择一样东西，然后投入一生去做，不需要去在意能不能做得到，就足够可以活的坚定而踏实了，听起来不是很有诱惑力吗？</p><p>那么生命短暂，到底我想要去中心化哪一样事物？</p><p>思索良久（一个月），我得出了属于我的答案：阅读。如果有天堂，那一定是图书馆的模样。那里信息自由地流通，书籍自由地出版，人与人自由地讨论。</p><p>我真的很喜欢这种看起来和金钱就关系不大而且很偏重人文关怀的去中心化方向。作出这个结论的时候，我对我未来的期待是努力成为一名独立研究者。但是其实具体怎么做我毫无头绪，唯一可以确定的是，我希望从技术方向入手去做这件事，因为我有兴趣这么做。</p><p>（为什么是独立研究者而不是独立开发者的原因之一是独立开发者通常要直接和客户打交道，有太多和市场推广和钱有关的麻烦事情……我一度怀疑过像我这么对钱头疼的人，除了啃老还有没有别的出路……）</p><p>不过幸得命运女神眷顾，虽然我之前决定努力成为独立研究者，Twitter的bio也都这么写了，但是没想到后来意外的遇见了RSS3。那是又一个辗转反侧无法入眠的夜晚，并没有任何期待的只是抱着单纯聊聊天的想法发送了好友请求，却猝不及防的从凌晨十二点开始通了一个半小时的电话，之后就决定加入RSS3。</p><p>在这方面我时常觉得自己是一个幸运的人。我真的原本都做好了哪怕在肯德基蹭网，租城中村廉租房，也要自费独立研究的打算，没想到现在有了一个可以带薪研究和我想独立研究差不算远的内容的机会（约等于带薪独立研究）；原本也完全没想着投入到有着所谓的发展前景的充溢着金钱的领域（没错我就是在说人工智能，proudly I can say 我的 background 和人工智能的关系几乎为零），没想到变幻莫测的社会机遇能让DWeb领域也有不少项目得到投资人的认可；原本也完全没冲着什么好找工作的方向去学习（是的这次我在说SDE），但是反倒是因为一些小众的智能合约相关研究背景也能得到某信息通信大厂某实验室的青睐。</p><p>我从不害怕失败，我只害怕有一天我再也不敢去尝试；我从不害怕未来遥不可及，我只害怕有一天我会就此认命。</p><h2 id="我得到了星星上的金子，却被燃烧殆尽"><a href="#我得到了星星上的金子，却被燃烧殆尽" class="headerlink" title="我得到了星星上的金子，却被燃烧殆尽"></a>我得到了星星上的金子，却被燃烧殆尽</h2><p>之前还在芝加哥上学的时候遇到一个读Post Doc的台湾人，他自述过往的求学经历从台南到台北到欧洲到北美，一次比一次离家远。他自嘲自己像一个迷失了的流浪的孩子。当时的我一下子被这句话击中，我也是啊（<del>不，我不是Post Doc</del>），无可救药地眷恋一个又一个的远方。但是更多时候这种热爱似乎只停留在我的幻想里。年少轻狂，看着天边像在眼前，赴汤蹈火也想走一趟？我也想要拥有这样的意气风发啊，可是我时常觉得我活的过于束手束脚。我明明走的更远的。比如我明明可以更轻松愉快的写下这个小节的，明明把写下这篇文字的力气用在其他事情上。</p><p>我不羡慕自由的灵魂，因为我也有，我羡慕那些自由的肉体，因为我时常感觉自己的肉体深陷囹圄。亲情的羁绊与对自己人生的掌握的两难，似乎贯穿我这二十多年的人生。亲情的重量，大概永远是我生命中不能承受之轻。这么多年我感受的到我可以更坚定和自信的和主流价值观对抗，我拥有了更加强大的对真善美的信仰，但是面对以爱之名的束缚时的绝望感，我依然觉得在原地踏步。如果说有什么不同，那就是10年前的我只能选择故意拖慢回家的步伐，而10年后的我可以选择沉迷酒精。我知道他们想要什么，可是我不知道我给不给得了；我理解所有的无可奈何，可是触碰不到的距离我一毫一厘也改变不了；我知道什么样的妥协能让除了我之外的人都高兴，可是我知道我杀不死我自己。</p><p>我曾把完整的镜子打碎，我曾把机会就扔在我眼前。他们说我自毁前途（<del>这不就是我想要的么</del>），大概是吧，对better world的期许指引的人生并不能让我有一个他们眼中的better life。事实上我也不在乎这些，我时常有种想要坠入万丈深渊的感觉，也许我真的，只想活得更强烈一些。</p><p>我知道自由是相对的，自由是有界限的，也知道正是因为自由的界限才使自由显得更加珍贵。可是我也知道自由是有代价的，freedom is not free. 人真的有选择吗，如果终有一日“我得到了星星上的金子，却被燃烧殆尽”，是不是最好的结局？</p><p>沉默如谜。</p><h2 id="我也想说下一个十年我们再见"><a href="#我也想说下一个十年我们再见" class="headerlink" title="我也想说下一个十年我们再见"></a>我也想说下一个十年我们再见</h2><p>可是总归，我还是不想为了理想去死的。亦余心之所善兮，虽九死其犹未悔，为了理想失去生命丝毫不会令我感到惧怕。但是我想活着，活着继续为了理想努力。黑塞说青年人总是勇于为理想捐躯，老年人虽缺少英雄气概，但懂得自己为了什么备受折磨。勇于为理想捐躯也许很畅快，但那不是勇敢，是对生命的不尊重。尽管我不在乎最终能不能成功，但是显然我不想去以一种一看就不可能成功的方式去实践，我暗自下定决心要做一个知行合一脚踏实地的理想主义者。试图在人间建立天堂，只会致使通往地狱。我明白这其中的道理，我希望我能拥有区分这些细微之处的智慧。</p><p>十年前我似乎也想过，努力不让自己被世界改变。可是这滚滚红尘，谁能独善其身。现在的我，更加明白，我不可能不被世界改变，我只能选择去改变世界，在与世界的交互中去为我想要的未来投票。我不想等到我老了，我的孙辈来质问我，互联网变成今天这个样子的时候，你们在做什么。我曾通宵达旦地工作学习过无数个夜晚，不是为了没有选择，而是为了有能力承受选择非主流价值观的那条路的代价，是为了选择我想要的未来。</p><p>我也想说，下一个十年，我们再见。那时，再回头看看，我们做到了什么。</p><p>听说这是最后一个被辜负的春天，飞鸟将嬉戏云端，古老的诗歌会重新被吟唱。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;四千多字的一篇博客居然前前后后写了一个月，倒不是没有思路，就是和自己经历相关的文字，可能会抑制不住的想要反复补充修改，而且常常写着写着会思绪飘移，开始回顾一些其他事情…总之最后终于下定决心无论如何一定要写完了！&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
    
    
      <category term="Misc" scheme="https://atlasquan.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>给她</title>
    <link href="https://atlasquan.github.io/2021/03/08/toher/"/>
    <id>https://atlasquan.github.io/2021/03/08/toher/</id>
    <published>2021-03-08T19:42:00.000Z</published>
    <updated>2021-09-27T18:33:32.685Z</updated>
    
    <content type="html"><![CDATA[<p>金色的夕阳温柔的抚摸双鬓的斑白<br>哪边虚妄哪边缠绵<br>浩瀚乾坤里曾翻山越岭<br>青青草木间且听风吟<br>彩云尽头无东亦无西<br>不信你听<br>土壤的深处 潮湿黑暗里它在用力伸展<br>鲜花会绽放 绿树会成荫<br>我们会枯萎老去</p><p>瑕疵浑浊 肮脏污秽<br>全都不会被净化<br>可是你看<br>星辰的怀抱里它在眨眼它在笑<br>想要长大的女孩进入甜甜的梦乡<br>想要强大的女人学着欣赏自己<br>想一辈子和你做朋友的我 写着这首诗</p><hr><p>妇女节有感而作，献给我爱的朋友，祝她妇女节快乐！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;金色的夕阳温柔的抚摸双鬓的斑白&lt;br&gt;哪边虚妄哪边缠绵&lt;br&gt;浩瀚乾坤里曾翻山越岭&lt;br&gt;青青草木间且听风吟&lt;br&gt;彩云尽头无东亦无西&lt;br&gt;不信你听&lt;br&gt;土壤的深处 潮湿黑暗里它在用力伸展&lt;br&gt;鲜花会绽放 绿树会成荫&lt;br&gt;我们会枯萎老去&lt;/p&gt;
&lt;p&gt;瑕疵浑浊 肮脏
      
    
    </summary>
    
    
    
      <category term="Poem" scheme="https://atlasquan.github.io/tags/Poem/"/>
    
      <category term="Chitchat" scheme="https://atlasquan.github.io/tags/Chitchat/"/>
    
  </entry>
  
  <entry>
    <title>栅栏</title>
    <link href="https://atlasquan.github.io/2020/12/26/fence/"/>
    <id>https://atlasquan.github.io/2020/12/26/fence/</id>
    <published>2020-12-26T18:43:32.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>大声嬉笑<br>疯狂尖叫<br>疾风中全力奔跑<br>阳光下狠狠拥抱</p><p>抹不走 恐惧<br>直到闪电冲破天际<br>呐喊声 响起<br>那里 曾有光！</p><p>弹片 鲜血流淌<br>枪声里 谁抚摸着谁的乳房<br>履带 滚动向前<br>炮火里 谁的阳具插入了谁的阴道</p><p>那里 曾有光！</p><hr><p>此诗为看完电影《<a href="https://zh.wikipedia.org/wiki/%E9%A2%90%E5%92%8C%E5%9B%AD_(%E7%94%B5%E5%BD%B1)" target="_blank" rel="noopener">颐和园</a>》(<a href="https://youtu.be/Nyt-9kND148" target="_blank" rel="noopener">Youtube指路</a>)和阅<a href="http://haoxixi.blogspot.com/2010/01/blog-post.html" target="_blank" rel="noopener">此篇影评</a>有感。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大声嬉笑&lt;br&gt;疯狂尖叫&lt;br&gt;疾风中全力奔跑&lt;br&gt;阳光下狠狠拥抱&lt;/p&gt;
&lt;p&gt;抹不走 恐惧&lt;br&gt;直到闪电冲破天际&lt;br&gt;呐喊声 响起&lt;br&gt;那里 曾有光！&lt;/p&gt;
&lt;p&gt;弹片 鲜血流淌&lt;br&gt;枪声里 谁抚摸着谁的乳房&lt;br&gt;履带 滚动向前&lt;br&gt;炮火里 谁的阳具插入
      
    
    </summary>
    
    
    
      <category term="Poem" scheme="https://atlasquan.github.io/tags/Poem/"/>
    
  </entry>
  
  <entry>
    <title>How to Listen on the Wallet State Changes in MetaMask in 2021</title>
    <link href="https://atlasquan.github.io/2020/12/25/how-to-listen-on-the-wallet-state-changes-in-metamask-in-2021/"/>
    <id>https://atlasquan.github.io/2020/12/25/how-to-listen-on-the-wallet-state-changes-in-metamask-in-2021/</id>
    <published>2020-12-25T12:43:05.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>There are two very common wallet state changes needed to handle: chainId(network) and account changes. It’s a very typical pattern to dynamically detect the current active user and chainId at the time of writing any non-trivial application. This article will introduce how to decently listen on these changes.</p><p>To manage it, we need to use two API calls:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># From https:&#x2F;&#x2F;eips.ethereum.org&#x2F;EIPS&#x2F;eip-1193#events</span><br><span class="line">Provider.on(&#39;chainChanged&#39;, listener: (chainId: string) &#x3D;&gt; void): Provider;</span><br><span class="line">Provider.on(&#39;accountsChanged&#39;, listener: (accounts: string[]) &#x3D;&gt; void): Provider;</span><br></pre></td></tr></table></figure><p>Since to connect MetaMask, we can use the <code>window.ethereum</code> as our <code>provider</code>, so to listen on the state changes, here’s a sample code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">let that &#x3D; this</span><br><span class="line">window.ethereum.on(&#39;accountsChanged&#39;, function (accounts) &#123;</span><br><span class="line">  console.log(&#96;Accounts changed. All connected accounts are: $&#123;accounts&#125;&#96;)</span><br><span class="line">  if (accounts.length &#x3D;&#x3D; 0) &#123;</span><br><span class="line">    console.log(&#96;All accounts disconnected.&#96;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    that.userAddr &#x3D; accounts[0] &#x2F;&#x2F; current active user</span><br><span class="line">    console.log(&#96;Currently the active user is $&#123;accounts[0]&#125;&#96;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">window.ethereum.on(&#39;chainChanged&#39;, (chainId) &#x3D;&gt; &#123;</span><br><span class="line">  console.log(&#96;ChainId changes. Current connected chainId is $&#123;chainId&#125;&#96;)</span><br><span class="line">  if (chainId &#x3D;&#x3D; correctChainId) &#123;</span><br><span class="line">    console.log(&#96;You are in the correct network.&#96;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    console.log(&#96;You are in the wrong network. Please switch to the network with chainId $&#123;chainId&#125;&#96;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Specifically, <code>let that = this</code> is just a small programming tip, yet very useful if there’s a context switch. But definitely you might not need that tip at all, just follow your own application logic!</p><p>The <code>accountsChanged</code> listener can be triggered if the number of connected accounts from 0 to some amount, or from some amount to 0, also it can be triggered if the current active user changes. Whereas the <code>chainChanged</code> listener can be triggered if the current connected network changes. But just to notice, both the listeners will not be triggered during the loading of the page, which means, if MetaMask has been enabled and some account has been connected to this site, reloading the page will not trigger the listeners.</p><p>So to summarize, according to the features of the two listeners introduced above, here I introduce a complete pattern I used in my application:</p><p>Once the page is loaded:</p><ol><li><p>At the very beginning we need to create two listeners on <code>accountsChanged</code> and <code>chainChanged</code> respectively, and in their handlers according to the application logic, I just do a little computations and modified a small amount of meaningful variables, which will be listened on out of the listeners, and there I will do the major computations.(Typically if you use some frameworks, like React, Vue, etc, it can be easily done.)</p></li><li><p>Then we need to check the current active account and the connected chainId and handle the different scenarios.</p></li></ol><p>Besides, if the dapp forces to connect the MetaMask once it’s loaded, we can implement the 3rd step just immediate after the above logic, otherwise simply put it in its correct position (mostly it’s supposed to be a click handler).</p><ol start="3"><li>Then we deal with the connect logic. I introduce to how connect MetaMask in a previous <a href="https://atlasquan.github.io/2020/12/25/how-to-connect-web3-js-to-metamask-in-2021/">article</a> in detail. In this step, we only need to handle the logic about connection to MetaMask, and we don’t need to know which accounts are finally connected or which network is switched, since we have the separate listeners above to handle such things.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;There are two very common wallet state changes needed to handle: chainId(network) and account changes. It’s a very typical pattern to dyn
      
    
    </summary>
    
    
    
      <category term="Blockchain" scheme="https://atlasquan.github.io/tags/Blockchain/"/>
    
  </entry>
  
  <entry>
    <title>How to Connect Web3.js to MetaMask in 2021</title>
    <link href="https://atlasquan.github.io/2020/12/25/how-to-connect-web3-js-to-metamask-in-2021/"/>
    <id>https://atlasquan.github.io/2020/12/25/how-to-connect-web3-js-to-metamask-in-2021/</id>
    <published>2020-12-25T08:50:04.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>The blockchain world always evolves so quickly, since it’s still a young and energetic field. Without programming with ethereum network for some time, I noticed lots of stuff has changed. This article is inspired by the article <em><a href="https://awantoch.medium.com/how-to-connect-web3-js-to-metamask-in-2020-fee2b2edf58a" target="_blank" rel="noopener">How to Connect Web3.js to MetaMask in 2020</a></em>. It’s worth mentioning that, according to this article, in newer version MetaMask, we can simply use <code>window.ethereum</code> as the <code>provider</code> itself, without checking <code>window.web3</code> for its <code>currentProvider</code>.</p><p>However, the implementation mentioned in that article used the code <code>window.ethereum.enable();</code> which still works until now, but there’s an warning:</p><blockquote><p>MetaMask: ‘ethereum.enable()’ is deprecated and may be removed in the future. Please use the ‘eth_requestAccounts’ RPC method instead.<br>  For more information, see: <a href="https://eips.ethereum.org/EIPS/eip-1102" target="_blank" rel="noopener">https://eips.ethereum.org/EIPS/eip-1102</a></p></blockquote><p>So that I am not satisfied. Then I planned to write a new 2021 version article to introduce how to manage it without warning. (Even though there’s still 5 days remained in 2020 XD but I believe it doesn’t matter.)</p><p>We should use <a href="https://eips.ethereum.org/EIPS/eip-1193#request-1" target="_blank" rel="noopener">request</a> API instead of <code>ethereum.enable()</code>. (The <code>ethereum.send()</code> also can work but has been deprecated similarly.) So I recommend using the following code to connect to MetaMask:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">const Web3 &#x3D; require(&quot;web3&quot;);</span><br><span class="line">const connectMetaMask &#x3D; async () &#x3D;&gt; &#123;</span><br><span class="line">  &#x2F;&#x2F; If web3 has been initialized somewhere else, we don&#39;t need to reconstruct it.</span><br><span class="line">  if (typeof window.web3.currentProvider &#x3D;&#x3D; &#39;undefined&#39;)  </span><br><span class="line">    window.web3 &#x3D; new Web3(window.ethereum)</span><br><span class="line">  try &#123;</span><br><span class="line">    let accounts &#x3D; await ethereum.request(&#123;</span><br><span class="line">      method: &#39;eth_requestAccounts&#39;</span><br><span class="line">    &#125;)</span><br><span class="line">    console.log(&#96;Accounts:\n$&#123;accounts.join(&#39;\n&#39;)&#125;&#96;)</span><br><span class="line">    return true</span><br><span class="line">  &#125; catch (e) &#123;</span><br><span class="line">    &#x2F;&#x2F; Usually it&#39;s caused by user self rejecting connection. </span><br><span class="line">    &#x2F;&#x2F; All provider error types can be checked here: https:&#x2F;&#x2F;eips.ethereum.org&#x2F;EIPS&#x2F;eip-1193#provider-errors</span><br><span class="line">    console.log(e)</span><br><span class="line">    return false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>But before connecting to MetaMask, typically we might want to also check if the browser supports the MetaMask, so we can use the following code to do that:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if (typeof window.ethereum &#x3D;&#x3D; &quot;undefined&quot;) &#123;</span><br><span class="line">  if (!(await connectMetaMask())) &#123;</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  console.log(</span><br><span class="line">    &#96;Please install an Ethereum-compatible browser or extension like MetaMask.&#96;</span><br><span class="line">  )</span><br><span class="line">  return</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Definitely you can adjust the code as your own dapp logic!</p><p>But just to notice that, this approach is to connect the MetaMask, not to test or listen whether it’s connected or not. If you want to listen on the connection changes, please see another of my article <em><a href="https://atlasquan.github.io/2020/12/25/how-to-listen-on-the-wallet-state-changes-in-metamask-in-2021/">How to Listen on the Wallet State Changes in MetaMask in 2021</a></em>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The blockchain world always evolves so quickly, since it’s still a young and energetic field. Without programming with ethereum network f
      
    
    </summary>
    
    
    
      <category term="Blockchain" scheme="https://atlasquan.github.io/tags/Blockchain/"/>
    
  </entry>
  
  <entry>
    <title>使用Firefox轻松绕过订阅付费墙（无需安装插件）</title>
    <link href="https://atlasquan.github.io/2020/11/09/fuck-subscription/"/>
    <id>https://atlasquan.github.io/2020/11/09/fuck-subscription/</id>
    <published>2020-11-09T21:24:25.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="付费墙简介"><a href="#付费墙简介" class="headerlink" title="付费墙简介"></a>付费墙简介</h2><p>付费墙（paywall）是一种通过购买或付费订阅来限制对内容（尤其是新闻）的访问的方法。通常分为硬付费墙和软付费墙：</p><ul><li>硬付费墙：必须登录付费以阅读内容，也就是说付费墙先于网页内容加载。代表：端传媒，华尔街日报（WSJ)</li><li>软付费墙：通常有免费阅读文章数量限制，一般表现为进入页面后几秒钟弹出订阅框，也就是说付费墙后于网页内容加载。代表：纽约时报，彭博社，经济学人</li></ul><p>这里我们讨论的是软付费墙。</p><p>关于付费墙的批判请参考<a href="https://www.iyouport.org/%e5%9c%b0%e7%8b%b1%e8%88%ac%e7%9a%84%e4%bb%98%e8%b4%b9%e5%a2%99%ef%bc%9a%e5%85%8d%e8%b4%b9%e3%80%81%e5%bc%80%e6%94%be%e5%92%8c%e6%b0%91%e4%b8%bb%e5%8c%96%e7%9a%84-web-%e6%97%b6%e4%bb%a3%e5%b7%b2/" target="_blank" rel="noopener">这篇文章</a>。</p><h2 id="绕过付费墙方法介绍"><a href="#绕过付费墙方法介绍" class="headerlink" title="绕过付费墙方法介绍"></a>绕过付费墙方法介绍</h2><p>方法超级简单，无需安装插件，只要使用Firefox就可以。Firefox浏览器内置有<a href="https://support.mozilla.org/en-US/kb/firefox-reader-view-clutter-free-web-pages" target="_blank" rel="noopener">“阅读模式”</a>（Reader View），可通过点击该模式的图标（图标位置如下图）进入阅读模式，或使用快捷键<code>Ctrl + Alt + R</code>。该模式下网页会隐去按钮，广告和背景图片等，从而提高阅读性。</p><img src="https://user-media-prod-cdn.itsre-sumo.mozilla.net/uploads/gallery/images/2017-11-02-21-03-17-370802.png"/><p>在浏览包含软付费墙的网页时，如果我们在刚进入页面的时候，快速切换到阅读模式，则可以阻拦后续付费墙的加载。</p><p>比如下图，是纽约时报的一篇文章，只要我们启动了阅读模式，就可以愉快的享受阅读全文了~</p><img src="/2020/11/09/fuck-subscription/reader-view.png" class=""><p>That’s all！Firefox超好用对不对！</p><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><ol><li><p>并不是每个页面都有阅读模式，我并不了解Firefox的判断是否一个页面可以启动阅读模式的原理，但是至少之前提到的那几家新闻媒体的网站（纽约时报，彭博社，经济学人）都是可以启动阅读模式的。</p></li><li><p>有的网站也可以通过在刚一进入网页就敲击Esc键阻止网页的继续加载，从而阻止付费墙的加载。但是我实验过多个网站，发现这个方法并不具有通用性，有的网页依然会加载付费墙，有的网页会定时刷新，我们必须在浏览过程中持续敲击esc键才可以阻止付费墙的弹出。所以综合来讲，阅读模式的方法更方便，阅读体验也更好。</p></li></ol><p>最后，</p><h1 id="我哋真系好钟意Firefox！"><a href="#我哋真系好钟意Firefox！" class="headerlink" title="我哋真系好钟意Firefox！"></a><strong>我哋真系好钟意Firefox！</strong></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;付费墙简介&quot;&gt;&lt;a href=&quot;#付费墙简介&quot; class=&quot;headerlink&quot; title=&quot;付费墙简介&quot;&gt;&lt;/a&gt;付费墙简介&lt;/h2&gt;&lt;p&gt;付费墙（paywall）是一种通过购买或付费订阅来限制对内容（尤其是新闻）的访问的方法。通常分为硬付费墙和软付费墙：
      
    
    </summary>
    
    
    
      <category term="Misc" scheme="https://atlasquan.github.io/tags/Misc/"/>
    
      <category term="互联网" scheme="https://atlasquan.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>三和市场——“黑色”桃花源 |《岂不怀归：三和青年调查》书评</title>
    <link href="https://atlasquan.github.io/2020/09/03/sanhe/"/>
    <id>https://atlasquan.github.io/2020/09/03/sanhe/</id>
    <published>2020-09-03T20:15:28.000Z</published>
    <updated>2021-09-27T18:33:32.685Z</updated>
    
    <content type="html"><![CDATA[<p>前些天偶然看到关于这本新书的访谈，立刻被里面提到的三和“大神”吸引，就先找来了2018年日本电视台NHK拍的<a href="https://movie.douban.com/subject/30219684/" target="_blank" rel="noopener">三和青年纪录片</a>看，看罢仍觉得不过瘾，就又买来这本书的<a href="https://www.amazon.cn/dp/B08FB2TN6K/" target="_blank" rel="noopener">Kindle版</a>读。读完之后心中有些感触不吐不快，遂写下这篇书评。</p><h2 id="先说说这本书本身"><a href="#先说说这本书本身" class="headerlink" title="先说说这本书本身"></a>先说说这本书本身</h2><p>黑色桃花源是这本书里作者提出的一个比喻，我觉得还蛮贴切的。我读这本书之前光看标题以为“岂不怀归”是归故里，读完后觉得亦可说是归三和。就算是黑色，那也是桃花源啊。比如<a href="https://szbbs.sznews.com/thread-3819634-1-1.html" target="_blank" rel="noopener">这篇文章</a>里的红姐“离开（三和）10次，又回来10次，她再也不敢折腾，身无分文却无需担心的地方，恐怕全世界只有三和。”</p><p>读完这本书一个很大的感受是虽然作者说在尽力用“白描”的手法还原现实，但是我依然觉得多处描述也没那么“白”，稍微有些矫揉造作和主观臆断。比如这句：“当你看到一个青年在那里狼吞虎咽地吃着几无滋味的面条时，便可想象他的处境是有多么糟糕。” 这句话里让我十分尴尬地感受到作者刻意通过“狼吞虎咽”和“几无滋味”的对比作秀似的展示这个青年的糟糕处境。尤其我最莫名其妙的是“几无滋味”这个词，它甚至是在诋毁双丰面馆，try too hard…但是也没必要细抠字句，就是举个例子，表达一下书里类似这样的好几处让我感觉作者的观察视角有点高高在上，常常像是在把观察到的事实套入自己先入为主的想法里，而不是从观察到的事实里谦虚谨慎的推测当事人的想法。</p><p>我并不怎么懂社会学，但是从我的角度来说，这本书作为一个对社区研究的报告，但有一些我比较在意的关于社区的基本问题完全没有提到。这些问题包括三和社区是什么时候形成的，期间是否有什么重大变迁，三和社区到底有多大，占地面积多少，三和青年数量有多少，人口结构（年龄、性别比）如何。书里旁敲侧击的提过一些关于三和人才市场的形成时间，应该大致是2010年左右，但是并没有详细的描述。我从别处的文章看来，隐隐约约觉得富士康2010年的14连跳楼事件应该对三和社区当时是有重大影响的，但是也没有看到有分析具体有什么影响的。</p><p>关于性别问题，我想再说几句。不管是这本书还是NHK的那个纪录片，我都没有见过三和青年群体里有女性。原因似乎是显而易见的，比如女性睡大街会更危险，且可能羞耻心更强，再比如女性不会被招聘去做体力劳动的日结。但是这不是一个理所当然的答案。有没有挂逼了但是不想站街只是想做日结，但是又融入三和社区失败的女性？有没有和三和男性青年在三和社区恋爱的女性（这个问题的答案其实也是和目前三和青年群体的心理状态相关的）？我觉得这些也是很有意思的问题，但是可能和这本书讨论的问题有些远了。</p><p>尽管书的内容和表现手法我有一些不满意，但是我依然觉得这本书是一份非常重要的研究报告。作者在前言说“中国社会处在剧烈变革之下，很多社会现象转瞬即逝，在深入的系统性研究尚未完成之前，某个现象背后的社会事实可能就已经消逝了。基于社会事实的白描研究则有助于研究者抓住转瞬发光的一刻，带来不错的研究成果或者对社会事实的记录。”在这一点上我是完全认可的，尤其是对没有话语权的社会底层的白描，更加珍贵。而且书里也确实很翔实的记录了三和青年的活动及地点以及吃穿住行方面的生活需求。</p><h2 id="关于三和青年"><a href="#关于三和青年" class="headerlink" title="关于三和青年"></a>关于三和青年</h2><p>也说不上来为什么一接触三和“大神”的概念就特别感兴趣，理由似乎也有很多，最重要的是我非常想了解我所在的这片土地上真实的底层社会在发生着什么，其他还有一些具体的困惑，比如困惑为什么偏偏是深圳，困惑三和青年不去工作的理由、心态、想法等等。</p><p>而开始读书之后，这些困惑有的解开了，有的没有，有的还引出了更多的困惑。书读到后半部分，心中关于三和青年这一群体，突然浮现出了《香港第一课》的那句结语“論系統性敗壞”，真真是一团乱麻。</p><h3 id="为什么是深圳"><a href="#为什么是深圳" class="headerlink" title="为什么是深圳"></a>为什么是深圳</h3><p>这个问题在读完书后大概有了答案。一是气候，二是产业。毕竟要是喝的烂醉然后在东北的冬天里睡大街，不开玩笑第二天早上就真没了。所以气候适宜其实是低成本生活的一个前提。而深圳的物流产业发达，尤其是快递，所以这也提供了很多分拦快递包裹的日结机会。我认为第二点也正是为什么直到2010左右三和社区才成气候的原因之一。</p><h3 id="三和青年的娱乐方式"><a href="#三和青年的娱乐方式" class="headerlink" title="三和青年的娱乐方式"></a>三和青年的娱乐方式</h3><p>作为一个现代人，娱乐的需求其实和衣食住行是可以并列的。因此看书的过程中我一直留意三和青年的娱乐方式有哪些。就我所看到的，大体而言白天有彩票店，傍晚和深夜有类似赌博性质的斗地主、炸金花和纯粹就是赌博性质的“百家乐”外围，晚上还有电子一条街可以逛逛看，且24小时有网吧。此外我发现看热闹似乎是三和青年重要的娱乐方式之一。比如在电子一条街中，一位卖手机的大叔每次都会在摊位上用手机开着外音播放电视剧，此时就会有许多青年待在摊前一起看。再比如如果有挂逼的青年在电子一条街上找人卖手机，“好几个无所事实的青年就围过来，看如何收手机”。此外三和市场的两家西瓜售卖铺曾发生过冲突，“这是闲着无聊的三和青年最喜欢凑热闹的场面，很快引来上百人围观。”</p><h3 id="人究竟在什么情况下会失去希望"><a href="#人究竟在什么情况下会失去希望" class="headerlink" title="人究竟在什么情况下会失去希望"></a>人究竟在什么情况下会失去希望</h3><p>NHK的那个纪录片里面宋春江（一位三和大神）曾说“那些东西（梦想），太遥远了，真的是太遥远了”，这句话深深的触动了我，遥远的应该不太是实际的距离，而更是心理的距离，人究竟在什么情况下会彻底的失去希望？而伴随着这个问题的是另一个疑惑是，既然他们已经完全丧失了生活的希望，他们也没有选择集体自杀啊，一定还有某种值得的东西，或者某种牵绊，那么是什么呢？</p><p>虽然我还是回答不了这两个问题，但是在读到书里“眼镜哥”的案例时候，我隐隐约约有了一些感悟。“眼镜哥”原本是在一位装修材料公司做广告推送，但是因为对工作已经没有太大兴趣，并且看不到升职的机会，甚至曾经的后辈已经晋升为管理人员，加上被三和的生活方式所吸引，有点慕名而来，然后很快融入三和，成为一名三和大神。之后他甚至说“找到了很强的存在感，内心燃起了一种不挂逼的‘激情’”。</p><p>读到这里时我猜测，也许正是在这种底线生活与极限生存的反复徘徊间他们真正体会到了自身的存在，在这个黑色桃花源中，他们的生活目标是清晰且易于理解的，就是“今天也要不挂逼哦”，他们可以在他们创造的社会规则里感受到生命的意义，但是出了这个桃花源，他们需要面对的就是巨大的贫富差距和机械无聊的流水线工厂带来的荒谬和无力感，是一个让他们完全失去希望的世界。</p><p>尽管作者评价“眼镜哥”是说“三和正好为他提供了无耻感的环境，提高了他的存在感，乃至于令他错误地认为自己有了继续前进的‘激情’。而真实的情况是，‘眼镜哥’失去了奋斗目标，失去了进步的动力。”但是我觉得“眼镜哥”说的前进的激情，和作者说的进步的动力不是一个东西。作者说的进步的动力，对“眼镜哥”而言可能是为了升职而努力的动力，可是在“眼镜哥”看不到升职的希望的时候，这种动力就早已失去了。而现在“眼镜哥”说的前进的激情，并不是指真实的主流社会认可的提高生活品质的前进，而是一种更原始的生命的热情。</p><p>但不得不说在这个问题上我的理解依然很肤浅，我预感这个问题将会伴随我很久很久了，毕竟对于一个理想主义者而言，梦想的意义太重大了，而且梦想的意义几乎是等同于生命的意义了，对我而言，如果连寻找一个梦想的希望都失去了，我大概不得不叹息“不行了，先走了”。所以反过来说我也非常想去理解到底什么情况下一个人会失去所有的希望。</p><h3 id="三和青年的高傲感来自哪里"><a href="#三和青年的高傲感来自哪里" class="headerlink" title="三和青年的高傲感来自哪里"></a>三和青年的高傲感来自哪里</h3><p>“那些看不起他人的青年优越感来自何处，始终是研究者的一个疑问。”这个是作者在书里提到的疑惑，我猜测可能作者觉得三和青年全都是社会底层的人，大家都没有资格嘲笑别人吧。但是我觉得这种优越感也不太难理解，从旁观者来看好象是五十步笑百步，可是设身处地的从五十步的角度来说，百步就是要糟糕一倍啊。尽管嘲笑他人来凸显自己的优越感是一种病态冷漠而残忍的方式，但是无论如何这样做可以满足自己的虚荣心，没有四大皆空的人都会有肯定自己的需求和欲望。另一个原因是我就是觉得男人多爱吹牛撒谎又自大，长个屌就觉得自己了不起，有这种优越感实在一点不意外。（这个描述当然有些夸张，肯定不是所有的男性都如此，但是我认为男性有这种想法的概率会比女性高。）</p><h3 id="三和青年的出路"><a href="#三和青年的出路" class="headerlink" title="三和青年的出路"></a>三和青年的出路</h3><p>作者认为三和青年的出路的主动因素依赖于自我意识的觉醒，被动因素可依靠社会生态链的断裂，如停顿网吧，掐断娱乐来源，取消日结用工形式，掐断廉价经济来源，以及改造周边设施，增加社会成本。</p><p>此外家庭和教育是防患于未然的办法。作者提出三和青年大多是留守儿童，缺少家庭的牵绊，和父母感情也淡，所以家庭上解决留守儿童问题应该是一个思路。作者提出的建议有让孩子从小与进城务工的家人共同生活；不能牺牲进城务工的农村青年的利益，让他们有机会融入城市生活；同时缩小城乡和地区经济发展差异。教育方面作者认为现行教育体系严重落后于社会经济发展，应当对现有教育系统进行改革。</p><p>说实话这一章是我最不认同的一章，乍一看说的都有道理，但我总觉得作者在避重就轻的说些冠冕堂皇的话。人的改变总是要靠自我意识的觉醒，这点我完全同意，但读完这本书之后谁还能觉得这些深陷泥淖青年自我意识有可能觉醒？相信作者也不认为他们有机会主动的自我意识觉醒。而被动因素里作者提出的观点真是有点让我无语，尽管作者自己也说了这种做法不能真正消除三和青年现象，可是也过于懒政思维了。我认为当务之急应当是打击黑产，严查做法人，开黑电话卡的业务。这既可以阻止三和青年不劳而获的侥幸心理，也可以打击背后的最终受益人，间接的间接缩小贫富差距，间接的间接的间接的间接的减小三和青年的对社会的失望。此外这本身也就不是公平的交易，是应该被禁止的。然后应该是为三和青年集体补办身份证，“卖出一张身份证，买入一条不归路”，这不是一个比喻，这是一个事实。补办身份证至少可以拿掉那让部分青年走上不归路的最后一根稻草。至于日结这种用工形式，它的灵活性对企业和劳工都是有利的，非要取消它只能是让民（企业、务工者、全国的网购的网友）不聊生。日结是没有问题的，问题是不能有效保护劳动这权益的日结。</p><p>说到劳动者权益，也就要提到我最失望的一点，就是作者居然没有提出成立工会来保障劳动者利益的解决思路。书里有一章描述三和青年频繁通过假装跳楼来博取社会注意，表达自己诉求。他们这么做的原因不正是除此之外根本没有发声渠道吗？他们不愿意进厂工作的一个原因不就是中介克扣工资他们无力对抗吗？如果有工会的话，无论官方发起的工会，还是自发组织的工会，只要不是徒有其名的工会，都是可以凝聚他们的力量，放大他们的声音，帮助他们争取权益的。确实另有一个事件也提到他们缺乏组织能力，仅有一次大规模抗议黑中介的经历，也如一盘散沙。他们冷漠自私，没有合作精神，只关注自己的眼前利益。但是民主、合作、抗争都是需要练习，也许还需要引导的能力。而且让他们如一盘散沙，每个个体趋于原子化的，也正是我们所有人共同创造的这个社会啊。<strong>我想说的是，尽管他们不是完美受害者，他们看上去好像冷漠自私，好像好吃懒做，但是请不要因此而觉得他们无药可救，因为我们共同生活在这个社会里，也因为我们同样是受害者啊，we are all the 99%，我们都是那99%。</strong></p><p>最后我大致认可作者关于城乡问题和教育问题的看法，考虑到作者毕竟是一个研究者，不是拿纳税人钱的公职人员，在策略制定上给出这样的的建议我觉得也完全合格。只不过我想补充一点点我的看法，我觉得作者给出的建议是有一些像冠冕堂皇的漂亮话，因为不管说是留守儿童问题，还是对教育系统改革，都不是本质问题，本质问题就是城乡户籍制度问题。如果不从城乡户籍制度的诸多限制上入手，如果不真的动那少部分人的利益，那么留守儿童问题没有办法真的解决，务工者融入城市只是一句空话，所谓教育改革也最终只能流于形式。但是户籍制度问题恐怕是当前中国社会最复杂的问题之一了。所以说是一团乱麻啊。但是当然我觉得作者提出的这些改革的方向都是有意义的，社会的进步非一朝一夕，每一点微小的改变都是可以带来一系列的影响的，墙倒要靠众人推。</p><h2 id="摘录一些句子"><a href="#摘录一些句子" class="headerlink" title="摘录一些句子"></a>摘录一些句子</h2><blockquote><p>在三和人力市场各方面的博弈中，我们看到，对规则的破坏成为其各自追求利益最大化的途径。就招工企业而言，巧立名目克扣工资的行为时有发声；就中介而言，夸大招工岗位优势淡化劣势成为常态；就三和青年而言，拈轻怕重、消极怠工，甚至拿钱跑路并不鲜见。</p></blockquote><blockquote><p>…一部分青年已经习惯了没有手机的生活，或者说根本不再需要手机，因为他们不再与其他人产生任何联系，也不想被认识的人再联系到。</p></blockquote><blockquote><p>原来由血缘、亲缘和宗缘等社会关系网络联接的城中村“大家庭”，被三和青年间的趣缘关系所取代。所谓“趣缘”，是指基于共同的兴趣爱好、价值取向所形成的社会群体成员间的关系。在三和、青年人更多地基于价值取向而非买彩票、“打扑克”等兴趣爱好联系在一起：没有规划中的未来，只为当下而工作；不求累进式的成长，只求即刻的满足；维持着近乎底线的生存，安于低欲望的生活状态。</p></blockquote><blockquote><p>除了“三和小鬼”，也有人说自己在三和待了一年，认识了很多人，经常一起在网吧打游戏，一起喝酒，回到床位还可以一起吹牛，感觉到无拘无束的惬意。反而是进工厂工作了一段时间，实在是耐不住那种拘束、机械和无聊，总想着三和的那几个“叼毛”在干什么，是不是又在上网，是不是还在喝酒，是不是又在吹牛……最终选择从工厂辞职回到三和，就是为了享受在三和无拘无束的感觉。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前些天偶然看到关于这本新书的访谈，立刻被里面提到的三和“大神”吸引，就先找来了2018年日本电视台NHK拍的&lt;a href=&quot;https://movie.douban.com/subject/30219684/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;
      
    
    </summary>
    
    
    
      <category term="读书笔记" scheme="https://atlasquan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux下U盘无法挂载</title>
    <link href="https://atlasquan.github.io/2020/08/22/format-usb/"/>
    <id>https://atlasquan.github.io/2020/08/22/format-usb/</id>
    <published>2020-08-22T22:22:28.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>U盘无法挂载，这种事情总是会被遇上的嘛。比如我之前想把U盘格式化为FAT32格式，但是我也不知道为什么会出现格式化失败的情况，然后U盘就处于损坏状态，再也无法被系统识别（既无法被Windows识别，也无法被Ubuntu识别），也就是它再也无法出现在文件管理器里。</p><p>数据倒是之前有备份过，但是想着这个U盘从此就这么废了还挺可惜。加上今天正好打算做一个多系统启动盘，就想着能不能想办法救活这个U盘。</p><p>查了一下其实操作也简单，虽然U盘内部损坏了，不能被系统挂载，但是U盘本身的磁盘（disk）是可以被计算机检测到的，所以我们可以通过以下步骤来格式化特定的磁盘（disk）：</p><ol><li>查找U盘所在的分区<br>使用<code>sudo fdisk -l</code>指令列出当前的所有分区，通常U盘所在分区会出现在最后。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo fdisk -l</span><br><span class="line">...</span><br><span class="line">Disk &#x2F;dev&#x2F;sda: 28.9 GiB, 31029460992 bytes, 60604416 sectors</span><br><span class="line">Units: sectors of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">Sector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes</span><br><span class="line">I&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0x456f9c1d</span><br><span class="line"></span><br><span class="line">Device     Boot Start      End  Sectors  Size Id Type</span><br><span class="line">&#x2F;dev&#x2F;sda1  *    36096 60604415 60568320 28.9G  c W95 FAT32 (LBA)</span><br></pre></td></tr></table></figure><p>比如我的U盘所在的分区就是/dev/sda1。</p><ol start="2"><li>格式化此分区</li></ol><p>使用<code>mkdosfs -F 32 -I /dev/sda1</code>指令后即可格式化U盘了。</p><p>操作完成以上步骤后我的U盘终于重新出现在了任务管理器里！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;U盘无法挂载，这种事情总是会被遇上的嘛。比如我之前想把U盘格式化为FAT32格式，但是我也不知道为什么会出现格式化失败的情况，然后U盘就处于损坏状态，再也无法被系统识别（既无法被Windows识别，也无法被Ubuntu识别），也就是它再也无法出现在文件管理器里。&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://atlasquan.github.io/tags/Linux/"/>
    
      <category term="USB" scheme="https://atlasquan.github.io/tags/USB/"/>
    
  </entry>
  
  <entry>
    <title>趣评《存在主义咖啡馆》</title>
    <link href="https://atlasquan.github.io/2020/08/15/existentialism/"/>
    <id>https://atlasquan.github.io/2020/08/15/existentialism/</id>
    <published>2020-08-15T14:11:00.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>读完此书，那些逝去的存在主义者们，那些他们共同创造的思想和故事，连同因为他们甚至更加辉煌的时代，在我的脑海里变得鲜活生动。他们，真的很有趣。</p><p>读此书时，这种群像的视角，倒是不由的让我想起了最近也在看的漫画《文豪野犬》。《文豪野犬》的主题之一就是以拥有异能的文豪们为背景来探索如丧家之犬的人生意义何在。这个主题也很符合这些存在主义者呐，拼命想要挣脱中产阶级束缚的波伏娃和萨特，贫民窟长大却坚决守护着善良和正直的加缪，被迫离开学术界成为修女，最终又因为犹太出身而死于奥斯威辛的伊迪丝·施坦因，等等等等，某种程度他们不都是丧家之犬么。而他们，不是也拼命在用自己的行动，去寻找属于自己人生的意义吗？若有《存在主义者野犬》的话，想来也是非常有趣（那费奥多尔就是同时出境《存在主义者野犬》和《文豪野犬》的文哲界两开花的俄罗斯人了（笑））。</p><p>这些联想不禁让我想仿照《文豪野犬》也为他们设计异能：</p><ul><li>海德格尔<ul><li>遗忘的存在（精神攻击）<ul><li>通过接触使对方攻击迟缓</li></ul></li></ul></li><li>萨特<ul><li>恶心（物理攻击）<ul><li>使用潮水般的蟑螂老鼠蜥蜴攻击对方</li></ul></li></ul></li><li>波伏娃<ul><li>异化的凝视（精神攻击）<ul><li>通过目光对视使对方放大自己的技能的缺点，无法集中注意力攻击</li></ul></li></ul></li><li>加缪<ul><li>蔑视诸神（辅助技能）（加缪是个温柔的人呢，技能当然也要温柔了）<ul><li>强化己方战斗持久力</li><li>削弱对方的攻击力</li></ul></li></ul></li></ul><p>这一篇希望能博君一笑了（反正我自己是玩的挺开心的），下一篇再正经写一篇《存在主义咖啡馆》的读书笔记（下次一定？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;读完此书，那些逝去的存在主义者们，那些他们共同创造的思想和故事，连同因为他们甚至更加辉煌的时代，在我的脑海里变得鲜活生动。他们，真的很有趣。&lt;/p&gt;
&lt;p&gt;读此书时，这种群像的视角，倒是不由的让我想起了最近也在看的漫画《文豪野犬》。《文豪野犬》的主题之一就是以拥有异能的文豪
      
    
    </summary>
    
    
    
      <category term="读书笔记" scheme="https://atlasquan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>弥散</title>
    <link href="https://atlasquan.github.io/2020/08/09/dismiss/"/>
    <id>https://atlasquan.github.io/2020/08/09/dismiss/</id>
    <published>2020-08-09T23:35:00.000Z</published>
    <updated>2021-09-27T18:33:32.673Z</updated>
    
    <content type="html"><![CDATA[<p>一</p><p>扳机扣下<br>钟表嘀嗒<a id="more"></a></p><p>枫叶如血<br>残阳冷却</p><p>遗忘存在<br>请缓缓爱</p><hr><p>是谁扣下了扳机 在这硝烟弥漫的城市里<br>也无所谓是谁吧 时钟滴滴哒哒依然向前</p><p>果真是深秋了啊 枫叶鲜红如血<br>等等 也许真的就是血染红的吧<br>人说残阳如血 可我看红枫更胜一筹<br>可能是天色已晚了吧<br>天空逐渐冷却 晚霞渐渐淡去 长夜即将来临</p><p>又一瞬间我迷失于空无一物 忘记了存在的意义<br>正是可以去爱的时候了 但不要急</p><hr><p>二</p><p>月影在湖面上 迷路<br>湖水在月光里 窒息</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一&lt;/p&gt;
&lt;p&gt;扳机扣下&lt;br&gt;钟表嘀嗒
    
    </summary>
    
    
    
      <category term="Poem" scheme="https://atlasquan.github.io/tags/Poem/"/>
    
  </entry>
  
  <entry>
    <title>无需登录即可浏览网易云课堂的视频</title>
    <link href="https://atlasquan.github.io/2020/05/11/mooc-163-no-login/"/>
    <id>https://atlasquan.github.io/2020/05/11/mooc-163-no-login/</id>
    <published>2020-05-11T17:52:35.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>意外的发现了一个无需登录网易云课堂即可浏览课程视频的方法，在此和大家分享。(至少截至2020.5.11这种方法还是有效的)</p><h2 id="前言（可跳过的废话）"><a href="#前言（可跳过的废话）" class="headerlink" title="前言（可跳过的废话）"></a>前言（可跳过的废话）</h2><ul><li>为什么不想登录？<ul><li>这种但凡要看完整正文内容，就必须注册登录甚至下载App的互联网模式很流氓，让我很不爽。</li><li>注册了账号就会有信息泄露的风险（除了密码泄露这种严重的信息泄露问题之外，还有垃圾邮件/骚扰电话）。</li><li>我不想之后被推荐一堆东西。<a id="more"></a></li></ul></li></ul><p><strong>我不是反对账号制这种模式，而是非常反对目前的互联网环境里很多毫无必要登录的行为也必须注册登录才能完成的引流模式。</strong></p><ul><li>小插曲：最近刚得知一个叫做“临时邮箱”的东西<a href="#临时邮箱">【1】</a>，本想着其实也可以用临时邮箱注册一个账号试一下。但是发现虽然有邮箱登录的选项，但是没有邮箱注册（匿名制的）的选项，只有手机号注册，或微信、QQ、微博、人人、爱课程账号第三方登录的模式（这些账号全都是实名制的）？<div style="display: flex; justify-content: center;"><img src="signin.png" ><img src="signup.png" width="92%" ></div></li></ul><p>推测是两个可能：1.以前有邮箱注册的选项，邮箱登录是为了兼容老用户。２．注册之后的账号可以绑定邮箱，之后用邮箱登录。不过我并不很好奇是哪种可能，只是为这种全面实名制的（中文）互联网环境感到悲哀。</p><h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><p>发现绕过登录直接看视频的方法的是这样的过程：第一次我在手机浏览器上点开了网易云课堂的课程链接，顺畅的可以直接观看课程视频，但是第二次我在电脑浏览器上进入网页后，却发现没有这个选项。</p><div style="display: flex; justify-content: center;"><img src="mobile.png" ><img src="pc.png" width="80%" ></div><p>所以手机浏览器是可以直接观看视频的，那么要让电脑端也可以的做法就很简单了：修改掉user agent就可以了。</p><h3 id="使用插件的方法"><a href="#使用插件的方法" class="headerlink" title="使用插件的方法"></a>使用插件的方法</h3><p>可以使用<a href="https://addons.mozilla.org/en-US/firefox/addon/uaswitcher/" target="_blank" rel="noopener">User-Agent Switcher</a>，先点击Override for Domain，然后在mobile里随便选一个user agent就可以了。</p><img src="/2020/05/11/mooc-163-no-login/agent-switcher.png" class=""><p>注意要先点Override for Domain哦。如果先在mobile里选user agent则所有url都会默认使用mobile的user agent访问了。</p><h3 id="不使用插件的方法"><a href="#不使用插件的方法" class="headerlink" title="不使用插件的方法"></a>不使用插件的方法</h3><p>如果只是暂时使用一下，不想下载插件的话，也可以通过<code>Ctrl+Shift+M</code>，切换到responsive design mode，然后刷新网页，就可以了。如果想要全屏显示，再按一次<code>Ctrl+Shift+M</code>切换回来，但是不要刷新网页即可。</p><img src="/2020/05/11/mooc-163-no-login/responsive-screen.png" class=""><hr><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>临时邮箱：<a href="https://temp-mail.org/" target="_blank" rel="noopener">tempmail</a></p><blockquote><p>什么是一次性临时电子邮件？</p></blockquote><blockquote><p>一次性电子邮件 - 是一项服务，允许在经过一段时间后自毁的临时地址接收电子邮件。 它也被称为：tempmail，10minutemail，一次性电子邮件，假邮件或垃圾邮件。 许多论坛，Wi-Fi所有者，网站和博客要求访问者注册，然后才能查看内容，发表评论或下载内容。 Temp-mail - 是最先进的免费电子邮件服务，可帮助您避免垃圾邮件并保持安全。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;意外的发现了一个无需登录网易云课堂即可浏览课程视频的方法，在此和大家分享。(至少截至2020.5.11这种方法还是有效的)&lt;/p&gt;
&lt;h2 id=&quot;前言（可跳过的废话）&quot;&gt;&lt;a href=&quot;#前言（可跳过的废话）&quot; class=&quot;headerlink&quot; title=&quot;前言（可跳过的废话）&quot;&gt;&lt;/a&gt;前言（可跳过的废话）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;为什么不想登录？&lt;ul&gt;
&lt;li&gt;这种但凡要看完整正文内容，就必须注册登录甚至下载App的互联网模式很流氓，让我很不爽。&lt;/li&gt;
&lt;li&gt;注册了账号就会有信息泄露的风险（除了密码泄露这种严重的信息泄露问题之外，还有垃圾邮件/骚扰电话）。&lt;/li&gt;
&lt;li&gt;我不想之后被推荐一堆东西。
    
    </summary>
    
    
    
      <category term="Misc" scheme="https://atlasquan.github.io/tags/Misc/"/>
    
      <category term="互联网" scheme="https://atlasquan.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>再读小王子 | 所有的星星都在夜空嬉笑</title>
    <link href="https://atlasquan.github.io/2020/03/30/little-prince-review/"/>
    <id>https://atlasquan.github.io/2020/03/30/little-prince-review/</id>
    <published>2020-03-30T19:48:43.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>刚读完周保松老师的《小王子的启示》，感慨颇多，遂趁热写下早就想写的《小王子》的读书笔记。所以本篇博客可以说既是《小王子》的读书笔记，也是《小王子的启示》的读书笔记，但还是会更着眼于《小王子》本身的讨论。</p><div class="quote">《小王子的启示》这本书读来像是周保松老师自己对《小王子》的读书笔记，书中先从头到尾梳理了一遍人物的内心独白，然后从全书的角度讨论了几个非常重要的关于消费主义、公正自由等的政治哲学问题，以及情感联结、死亡、意义等的人生终极问题。</div><p>标题说是再，但这也不是我第二次读《小王子》了，算上读《小王子的启示》的时候也参照着又读了一遍《小王子》，我一共读过三遍小王子，看过一遍小王子的音乐剧，不瞒诸位，这四次，次次泪目。</p><a id="more"></a><p>小王子真的是一本很神奇的书，说是童书，可未经世事的小孩子哪里懂书里面大人们的莫名其妙，失去童心的大人们读起来又全然不能理解小王子的莫名其妙。而机缘巧合，一些经历和思考倒是让我数次能从这本书里感受到深深的共鸣。</p><h2 id="主要角色简评"><a href="#主要角色简评" class="headerlink" title="主要角色简评"></a>主要角色简评</h2><h3 id="小王子"><a href="#小王子" class="headerlink" title="小王子"></a>小王子</h3><p>小王子这个角色，是充满了人格魅力的，所以狐狸，玫瑰，飞行员和广大读者们都很喜欢他。但是最后一遍读小王子的时候，也就是以现在的我的理解，仔细反思的小王子这个角色，我认为他的人格是有局限性的。这一点在之后“小王子去哪里了”这节会继续讨论。</p><h4 id="与成人世界扞格不入"><a href="#与成人世界扞格不入" class="headerlink" title="与成人世界扞格不入"></a>与成人世界扞格不入</h4><p>小王子的天真直率与大人的迷恋权利、妄求虚荣、追逐金钱，应该是《小王子》表现的最明显的冲突了。依稀记得第一遍看小王子的时候，这部分的描写是全书最令我感动的地方。那是高中的时候，已经察觉到成人世界里的一套游戏规则对人们的束缚，但自我意识还处于起步阶段，除了一腔执拗，没有任何力量和智慧可以帮助自己去寻找真正重要且想要的东西，因而常常很是挣扎。偶然读到《小王子》，书里透露出的温暖又磅礴的力量，让那时弱小的我深受鼓舞。</p><p>尽管后来再读到这些对大人世界的描写，已经没有第一次读到时的那种震撼了，随着心智的成熟，自己的内心也愈发充满力量与自信，但是这种扞格不入依然是真实的存在的啊，“这是人的存在根本的两难，你一旦活在社会，就得受社会化所限；你的自由意识愈强，往往便愈痛苦。”</p><p>路漫漫其修远兮，吾将上下而求索。</p><h4 id="初恋危机"><a href="#初恋危机" class="headerlink" title="初恋危机"></a>初恋危机</h4><p>小王子和玫瑰明明是彼此相爱，为什么还要离开？周老师在书里说是因为小王子“经历了一场初恋危机，这场危机使得他无法面对玫瑰，也无法面对自己，遂不得不离开”。但是周老师自己在后记也说了，他离初恋太远了，已经不太能把握这种感情了，所以我尽管大体上我认可这个解释，但还是觉得这个解释有些含糊，遂想补充一些自己对这个问题的理解。</p><p>初恋是一段美好的感情，但常常是走不到最后的。爱一个人需要能力的，人类心智的复杂和这个世界的复杂都决定了这种能力是需要学习而获得的。如果不懂得如何爱一个人，往往最后就是明明彼此相爱，却只能彼此伤害。这正是小王子非走不可的原因啊。一天看了四十三次日落啊，那该有多伤心啊。我想我是懂这种感情的，太累了。感情上的事常常如此，沧海桑田后也许回过头来会觉得，当初分手的时候彼此明明都是世上最爱对方的人，为什么要分手。但是事实上选择离开，是当初能做的唯一的选择了。一段不成熟的关系里，我不能让你笑，你只能让我哭，就算爱又能怎样呢，除了离开还能怎么办呢。</p><h4 id="漫天嬉笑的繁星"><a href="#漫天嬉笑的繁星" class="headerlink" title="漫天嬉笑的繁星"></a>漫天嬉笑的繁星</h4><p>在小王子离开星球冷静下来后，之前提到的初恋危机或多或少都可以被时间缓解。但糟糕的是当他来到地球，看到了五千多朵和他心爱的玫瑰一样的玫瑰，甚至更美丽的玫瑰，他又遇到了第二次危机。他的世界观遭到了重建，如果他的玫瑰不是独一无二的，他不知道还有什么理由继续去爱他的玫瑰。</p><p>是狐狸在此时出现，教会了小王子真正重要的事是眼睛看不见的道理，解救了小王子的第二次危机。他告诉小王子尽管麦子对他没有用，但是如果他被小王子驯服了，那从此他看见麦子也会欣喜。他是在教小王子明白，重要的东西要用心去看，尽管用眼睛去看这些玫瑰和他的玫瑰长得差不多，但是用心去看才能感受得到他的玫瑰对于他而言的独一无二。</p><p>显然小王子明白这个道理了。因为之后他和飞行员分别的时候把这个道理也用在了他和飞行员的关系上：“夜晚，当你望着天空的时候，既然我就住在其中一颗星星上，既然我在其中一颗星星上笑着，那么对你来说，就好象所有的星星都在笑，那么你将看到的星星就是会笑的星星!”。</p><p>这个道理真的太美了。很多年以前，我痴痴地望着窗外的一片黑暗，尽管什么也看不清，但是因为知道他就在那片黑暗中，我无由来地傻笑。那时的我，脑子想的就是小王子对飞行员说的这段话。</p><p>只要用心感受过，印证过这个道理的人，应该都会觉得这个道理无比的美好。我明白了这个道理之后，总觉得万物有灵草木有情。相遇有时，离别亦有时，但是人与人之间的联结是可以超越离别的。用心珍惜所有的相遇，重要的东西就不会消失。用心仰望浩瀚的夜空，漫天的繁星就会嬉笑。</p><h3 id="玫瑰"><a href="#玫瑰" class="headerlink" title="玫瑰"></a>玫瑰</h3><p>周老师在书中提到，玫瑰的坚强特质是大多数读者忽略的细节。在玫瑰和小王子分别时她说她可以照顾好自己，这不是气话而是玫瑰自我意识的觉醒，玫瑰是坚强的，她今后可以和雨露、蝴蝶成为朋友，活出同样的精彩，读者不必觉得玫瑰必须从一而终地等着小王子回来。</p><p>这一点我是完全赞同的。事实上我也从来没有觉得玫瑰应该是从一而终地等着小王子回来这种形象。既然小王子可以走出星球去领悟这个世界，那么玫瑰自然也可以往后余生活的精彩。</p><h3 id="狐狸"><a href="#狐狸" class="headerlink" title="狐狸"></a>狐狸</h3><h4 id="最心疼也最喜欢的角色"><a href="#最心疼也最喜欢的角色" class="headerlink" title="最心疼也最喜欢的角色"></a>最心疼也最喜欢的角色</h4><p>从第二遍阅读小王子开始，我感触最深最心疼且最喜欢的就是狐狸这个角色了。（第一遍读的时候不懂事，是真的把狐狸当作小王子的好朋友了…）</p><p>我很心疼狐狸，付出了真心，教会了小王子成长，却不能陪小王子走到最后。最后分别时狐狸对小王子说“你要对你驯服的一切负责”的时候，但只提到了“你要对你的玫瑰负责”，丝毫没有提他自己。可小王子也丝毫没有意识到明明狐狸也是他驯服过的啊，他只是念叨着“我要对我的玫瑰负责”。小王子心里只有他的玫瑰啊。但是某种意义上，聪慧如狐狸，什么不明白呢，又哪里需要我心疼。</p><p>同时狐狸是我最喜欢的角色，大概是因为我把自己很多幽微曲折的隐秘情感投射到了狐狸身上吧。</p><p>浓稠的时光里，他曾无可奈何地劝我，“比我优秀的人那么多…考虑一下…”</p><p>竟无语凝噎。</p><p>那一瞬间我是懂狐狸的意思的，玫瑰对小王子而言很重要，是因为小王子在感情里付出了真心和时间，不是因为那支玫瑰是天下最优秀的玫瑰。</p><p>那一瞬间我也再一次明白了这世间无可奈何的事就是无可奈何的道理，就像小王子的心里就是没有狐狸。</p><h4 id="大胆拥抱爱"><a href="#大胆拥抱爱" class="headerlink" title="大胆拥抱爱"></a>大胆拥抱爱</h4><p>周老师在书里认为是狐狸爱小王子至极，而愿意放弃恋人关系，以朋友的身份被小王子驯化。他们的这段感情里小王子领悟了独一无二的道理，同时狐狸也有所领悟，明白了爱别人但别人不一定爱你的道理，也明白了爱一个人应该尽可能问自己能为对方做什么的道理。但我对狐狸的理解和周老师有所不同。（说实话狐狸这个角色真的很神奇，我问过我读过小王子的另一个朋友，ta对狐狸的理解和我的和周保平老师的也都不一样，大概这就是一千个读者眼里有一千只狐狸了吧）</p><p>这些道理狐狸是应该明白的，但不是这段感情里才领悟的。狐狸既然一开始就说出了收获麦子颜色的道理，那他（在此让我们假定狐狸是男性形象）一定是早就深刻明白人世间爱而不得才是常态的道理，所以之后才能够在感情中他始终贯穿无我之爱，丝毫没有占有欲，没有幻想小王子会一直在他身边，还一直用自己的智慧引导小王子。并且最后分别时狐狸立刻就能说出他虽然会哭会伤心但他不是一无所获，他收获了麦子的颜色，可见他在感情里是清醒的。换句话说，他既没有被似爱情又似友情的关系冲昏头脑进退两难，也没有在离别的悲伤里迷失自我，这是一种高超的能力，不是初恋里就能有的能力。所以我认为是因为狐狸的一开始就有对爱情的这些领悟，才能在这段关系中有如此的表现，而不是在这段关系中才领悟这些道理。</p><p>那么狐狸为什么请求小王子驯化他呢？周老师的答案是他爱小王子至极所以请求被驯化，但是狐狸从头到尾都是一个睿智的形象，我不觉得他是被小王子迷得神魂颠倒才请求被驯化的。狐狸当然是一开始就喜欢小王子的，但要说一开始就用情多深那倒未必。显然狐狸是懂得真正珍贵的感情是需要付出时间在驯服这件事上的，在没有驯服之前的一见钟情是缺少了厚重感的。所以我不认可这种解释。</p><p>但说实话，以现在的我的心境来看，如果一开始我知道小王子深爱的是玫瑰，那我选择走开就是了。所以说实话，我确实不太理解为什么他仍然选择去爱，而且是全身心投入的去爱，因为最后分别时看得出狐狸是真的很伤心会哭的。狐狸既可以在爱中一直保持清醒和睿智，但同时又能够放任自己的感情，毫无挂碍去哭去笑，这种智慧实在让人佩服。</p><p>尽管我不能理解狐狸，但我依然愿意谈一谈我粗浅的对狐狸心理活动的诠释，或者说，谈一谈我宁愿相信的狐狸的心理。</p><p>我理解的狐狸不仅是一个睿智至极的人，而且更难得的是从始至终都有一颗晶莹剔透的赤子之心。他坦诚，善良，很率真的面对自己的感情，喜欢就会说出来，所以他对小王子说“拜托…驯服我吧”。这句话看起来是狐狸因为太过爱小王子放下了所有自尊在向小王子苦苦哀求，但是自尊这个词，在成年人构建的语境里，太过沉重了。如果说小孩子，想要什么东西就会大胆的去说，去要，去争，大概不会觉得这样做有损自尊。类似，狐狸是有赤子之心的人，他没有那么多关于自尊的计较，没有那么多如鲠在喉难以言说的情感负担，他只是坦诚的面对自己的内心，喜欢小王子就是喜欢小王子，想要被驯服那就表达出来。</p><p>狐狸自然也有在爱情开始前就知道爱情结束时是什么模样的智慧，但他还是选择去爱，不是因为他不会受伤，或者不怕受伤，而是他懂得真实的情感联结是珍贵的，但也不会是完美的，他愿意拥抱感情里所有的真实，包括包容忍让，包括离别的痛苦。本身对爱情的智慧与坦诚的赤子之心指引着他，尽情体验一段关系里的所有感情。哭过笑过，经历过，但那些感情只存在于感情出现的当下，不会成为日后的负担。对狐狸来说，世间没有永远的事情是再明白不过的道理，那能留下的麦子的颜色，曾经拥有，就够了。</p><p>此外，狐狸的爱是宽广且博大的，他爱小王子，也爱小王子和玫瑰，所以在感情里他能无私到用所有的善良和智慧教小王子学会如何去爱。大概，除了爱，他对世间万物他还有一丝怜悯吧。</p><p>狐狸今后的人生会怎样呢？会再也不去爱别人吗？我不这么想。既然狐狸的智慧足以让他明白不在乎天长地久，只要曾经拥有的道理，既然他接受了爱玫瑰的小王子，既然他对真实的世界和真实的爱情有足够高的领悟，那他又有什么道理偏执的独自一人践行着至死不渝的爱情呢？</p><h2 id="重新思考一些情节"><a href="#重新思考一些情节" class="headerlink" title="重新思考一些情节"></a>重新思考一些情节</h2><h3 id="如果你是五千多朵玫瑰的其中一朵"><a href="#如果你是五千多朵玫瑰的其中一朵" class="headerlink" title="如果你是五千多朵玫瑰的其中一朵"></a>如果你是五千多朵玫瑰的其中一朵</h3><p>当小王子领悟到他的玫瑰对他的独一无二之处之后，他又去了有五千多朵玫瑰的玫瑰园，然后有些嘲讽的对这些玫瑰说因为你们没有被驯服所以没有价值。</p><p>周保松老师在书中提出了这样一个问题：如果我们是这五千多朵玫瑰的其中一朵，我们应该如何看待自己的价值。这个问题确实我之前从来没有意识到。而这个问题是有哲学意义的，因为事实上，不管小王子说不说出这些话，不管小王子有没有资格对这些玫瑰进行评判，“没有被驯服过的人生是没有价值的”是客观存在的。</p><p>周老师在书里进而给出了三种答案，第一种很直接，那就是积极寻找驯服的对象，第二种和第三种拓宽了“驯服”的含义，分别是用理想志业驯服自己，和自我驯服。</p><p>虽然我读书的时候不曾意识到这些普通玫瑰的价值问题，但是对人生的价值的思考中，我对这三种驯服方式的前两种还是有所领悟的。他人驯服和志业驯服本质上都是找到一种寄托，而且是在一种bigger than myself的东西上找到寄托。他人驯服的这种模式，虽然表面上看是把寄托放在了他人上，但同样包含着把寄托放在了互相之间的情感的高贵里，这种高贵就是一种bigger than myself的东西。而第二种志业驯服，显而易见是bigger than myself的东西，这一种也是我个人而言是更倾向的回答人生价值问题的方式。甚至对我来说，你不需要关心我，你只需要关心我的理想就可以。</p><p>但是书里提到的最后一种自我驯服，说实话我领悟不深。我明白了解自己的重要性和困难程度，但是我不能确信自我驯服本身就可以回答人生价值的问题。这种说法对于现在的我而言听上去似乎过于宗教，就像悉达多最后做摆渡人终其一生，他没有自创门派传播他的价值理想，而是最终和自己和解，达到自己内心的圆满，我认为悉达多就是用自我驯服回答了人生的价值问题。这种理念着实有他的迷人之处，有种明心见性立地成佛的感觉。但可能现在的我过于入世，还不太能理解，需要继续修炼。</p><h3 id="小王子去哪里了"><a href="#小王子去哪里了" class="headerlink" title="小王子去哪里了"></a>小王子去哪里了</h3><p>周保平老师指出是因为小王子对玫瑰的责任感觉醒，让他宁愿被蛇咬，不顾生死，孤注一掷地想要回到玫瑰身边。</p><p>其实我一度对小王子结局的解读是他自杀了，但仔细看完周保平老师的分析，并反复对照《小王子》，我承认我被说服了，是我之前理解的不够深刻。最有说服力的证据就是小王子没有失去生的意志，反而在狐狸最后对小王子说完那句“你要对你的玫瑰负责”后小王子对玫瑰的责任感更强了，所以他没有自杀的动机，只能理解为哪怕放手一搏，也要试一试的心态。</p><p>但是小王子选择回去，真的是因为狐狸说的那套应该对被驯服的对象负责任的理论吗？这一点我不完全认可。</p><p>之前简评玫瑰的时候也提到了，在分别的时候，玫瑰的自我意识觉醒了，我也一直相信玫瑰会在和小王子分别之后变得更加成熟且强大。其实从这种意义上说，这也是我一直忽略小王子对玫瑰的责任感的原因。因为从我的观点出发，我不觉得小王子需要对玫瑰负责。人生在世，能真心爱过都不容易，但过去就过去了，没有谁需要对谁负责，都是各自的命。一方非要认为需要对另一方负责反而显得很自大。</p><p>但是狐狸最后确实对小王子说了，对驯服的对象是有责任的。在这里我相信他提到的责任不是说具体要做些什么去补偿，而是有更宽泛的含义，是在说，要珍惜曾经创造过的美好，永远不要因为看到了更美的玫瑰就觉得曾经的爱荒诞可笑，否认所有的过往，不要分手后撕破脸说对方的坏话。各自在继续前行的路上都能够在心中默默珍重过去，这就是责任了。</p><p>此外，我们梳理一下小王子的行为，也会发现他想要回去是因为要对驯服的对象负责任的说法不具有说服力。小王子最后说满天的星星是他留给飞行员的礼物，那显然他自己是意识到飞行员也被他驯服了，既然狐狸和飞行员都被他驯服了，为什么他只对玫瑰有责任呢。那么我觉得他一定要回去的原因是玫瑰是他眼中最弱小的，是他有所“亏欠”的。而且更显然的原因就是驯服也有亲疏远近的，玫瑰是他最爱的人。</p><p>在这里我的理解是小王子的人格还是有其局限性的。局限性之一是，他对玫瑰持有“弱小”的刻板印象，他从没有想过玫瑰在他走后也会成长的可能。局限性之二是，在他和狐狸的关系中，他虽然学会了狐狸教给他的道理，但他的阅历还不足以目前让他察觉到他和狐狸的感情本身的重量。证据就是至少在他和狐狸分别时，还赌气的说“我一点都不想伤害你，可你偏偏要我驯服你……” 而且在狐狸提到要对驯服的对象负责的时候，他只在说玫瑰，丝毫没有提狐狸。局限性之三是，尽管可以理解他明白了他的玫瑰对他是独一无二的道理之后很高兴，但是他重新去花园里对其他的玫瑰说的话似乎透露出了一些他过于急切想要证明自己的意思，而且他没有意识到这些话可能会伤害到这些玫瑰。</p><p>但局限性也无可厚非，情不知其所起，一往而深，就算我觉得小王子不需要对玫瑰负责，我也不忍心批判小王子一心要为玫瑰负责的表现是自大的了，更愿意觉得结局就是一个浪漫的爱情故事吧：小王子游荡宇宙，终于明白了此情可待成追忆，只是当时已惘然的道理，然后毅然决然的选择冒险回去。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚读完周保松老师的《小王子的启示》，感慨颇多，遂趁热写下早就想写的《小王子》的读书笔记。所以本篇博客可以说既是《小王子》的读书笔记，也是《小王子的启示》的读书笔记，但还是会更着眼于《小王子》本身的讨论。&lt;/p&gt;
&lt;div class=&quot;quote&quot;&gt;
《小王子的启示》这本书读来像是周保松老师自己对《小王子》的读书笔记，书中先从头到尾梳理了一遍人物的内心独白，然后从全书的角度讨论了几个非常重要的关于消费主义、公正自由等的政治哲学问题，以及情感联结、死亡、意义等的人生终极问题。
&lt;/div&gt;

&lt;p&gt;标题说是再，但这也不是我第二次读《小王子》了，算上读《小王子的启示》的时候也参照着又读了一遍《小王子》，我一共读过三遍小王子，看过一遍小王子的音乐剧，不瞒诸位，这四次，次次泪目。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="读书笔记" scheme="https://atlasquan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux下嵌入式开发入门指北 | 让NUCLEO-F429ZI的小灯闪烁</title>
    <link href="https://atlasquan.github.io/2020/03/22/embedded-dev-beginner/"/>
    <id>https://atlasquan.github.io/2020/03/22/embedded-dev-beginner/</id>
    <published>2020-03-22T12:06:00.000Z</published>
    <updated>2021-09-27T18:33:32.673Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章是自己刚刚入坑嵌入式开发的一点总结和分享，内容非常基础，只讲到如何成功在开发板上运行一个最简单的使小灯闪烁的程序为止（类似hello world）。我算是有一些computer science的基础，但是对于嵌入式开发来说是纯新手，所以这篇文章更侧重从程序员的视角来介绍如何配置环境(使用基于Linux的开源的工具链），跑通整个开发的流程，而并不特别关注具体的开发。如果你是和我一样的背景，希望这篇博客可以对你有帮助。如果你需要更具体深入的开发指导，这篇文章不适合你。</p><h2 id="嵌入式开发背景介绍"><a href="#嵌入式开发背景介绍" class="headerlink" title="嵌入式开发背景介绍"></a>嵌入式开发背景介绍</h2><p>嵌入式开发就是在嵌入式操作系统上开发，嵌入式系统呢，就是一个包括了处理器，内存和输入输出的系统，说白了，就是一块芯片，一个和我们常用的计算机内部的那个芯片差不多的东西。他们具体的差距就在于架构（architecture），比如我们通常的计算机芯片是x86-64的架构，而嵌入式系统一般基于arm架构的会更多一点）。综上，嵌入式开发，可以理解为为另一种类型的计算机开发程序，这种计算机和我们平常开发程序的计算机大同小异（毕竟都是冯诺依曼体系嘛，不难理解的）。</p><p>那么现在我们要开始开发了，首先我们选定一个芯片。从我另一位搞机器人的朋友得知，stm32是目前比较主流的芯片系列，其中stm32 f4系列比较适合入门（stm是一个芯片厂商的品牌名称，32代表32位，f4是它的具体型号，表示基于arm cortex-M4F的内核）。</p><p>等等，光一块芯片怎么开发，怎么把这个芯片和我们的计算机怼到一起？要自己焊接什么东西吗？别急，最初的学习阶段不需要担心电路方面的问题，我们只需要一个开发板就可以了。简单理解，开发板就是厂商预先给芯片连接了很多外设（比如小灯）的板子，方便我们开发和调试。等我们把代码都在开发板上调试好了，真正生产产品的时候，我们可以直接把程序下载到最小系统板（minimum system board）上。最小系统板自带最基础的外围电路，如下图所示，这种是我们个人制作一些小东西的选择，如果是工厂量化生产产品的话会使用裸片（bare chip），然后工厂再自己焊接必要的电路。<br><img src="https://ae01.alicdn.com/kf/HTB1LqVzXvfsK1RjSszbq6AqBXXaI/STM32F103C8T6-ARM-STM32-Minimum-System-Development-Board-Module-for-arduino-DIY-KIT.jpg" alt="最小系统板"><br><img src="https://1.bp.blogspot.com/-7RTG4Rbd9uQ/Vu19R4FSwzI/AAAAAAAAAiY/aTK-9z6qeawoHmKyP7fuI6vzX8BRXEERA/s1600/stm32f103rbt6_bare.jpg" alt="裸片"></p><p>我选择的开发板是<a href="https://www.st.com/en/evaluation-tools/nucleo-f429zi.html" target="_blank" rel="noopener">NUCLEO-F429ZI</a>。Nucleo是stm官方的开发板，价格不算很贵，而且板子自带st-link（一个调试器，后文还会提到），但外设比较少。</p><p><img src="https://www.st.com/bin/ecommerce/api/image.PF262637.en.feature-description-include-personalized-no-cpn-large.jpg" alt="NUCLEO-F429ZI开发板"></p><h2 id="开发之前，我们先思考一下这个过程"><a href="#开发之前，我们先思考一下这个过程" class="headerlink" title="开发之前，我们先思考一下这个过程"></a>开发之前，我们先思考一下这个过程</h2><p>这个开发的大体的流程呢，就是在我们自己的计算机上编译好程序，然后把这个程序写入芯片的内存中即可。</p><p>之前也说了，我们平常写的程序是在自己的x86-64架构的计算机上运行，现在我们需要写能在arm架构运行的程序怎么办呢？这就是交叉编译了，怎么写代码没有什么特殊的，语法还是那些语法啊（你问用什么语言写？C/C++）只不过我们需要一些<strong>交叉编译的工具</strong>，使我们的代码可以在arm架构上运行。（这里先理清概念，具体的工具和指令后文再提）（关于语言，我个人的理解是其实也没有人规定你一定要用什么语言写，但是要交叉编译的话C和C++应该是工具链最完善最方便的语言了）。</p><p>我们继续思考，在那个和我们的架构不一样的arm架构的计算机上，我们怎么知道如何读取输入输出呢？平常我们写<code>#include &lt;stdio.h&gt;</code>，那现在我们include什么？此外，特别要注意的是，我们平常的写的代码需要运行的平台都是有操作系统的，操作系统会帮助我们初始化一些寄存器和重要的数据结构之类的，但是stm32 f4芯片没有啊，那我们该怎么办呢？幸运的是这些任务都有现成的库函数，我们也不太需要干什么（yeah！），只需要调用一下<strong>firmware library</strong>就好了！</p><p>接下来假设我们已经写好了程序，并且我们已经有了开发板，这个开发板上已经有足够支撑我们基础学习的外设了。那么首先，我们要把这个开发板和我们的计算机怼到一起，这需要一根<strong>TypeA-MicroB</strong>的线就行。<br><img src="https://cdn.worldcordsets.com/products/usb-20-type-a-male-to-micro-b-male-usb-2-a-micro-b_large.jpg" alt="TypeA to MircoB"></p><p>然后我们需要把编译好的程序下载到我们的芯片里，完成这一步我们需要<strong>stlink</strong>的帮助。stlink是针对stm8和stm32系列芯片的调试器（其他的芯片厂商有他们自己对应的其他调试器）。我们的开发板上已经自带了stlink的硬件，所以硬件上我们不需要配置，但是软件上需要相应的工具。</p><h2 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h2><p>基础知识我们已经准备好了，现在我们开始进行实际操作。最开始也提到了，我的开发环境是Linux系统，选择的开发工具和使用的库也都是开源的。这个一方面还是因为（执着的）开源信仰，另一方面也是因为开源的这一套工具链真的很简洁好用，你不需要注册一堆账号，下载一堆非常heavy的工具，而且平台依赖度小，作为开发者也更好的掌握期间到底哪个环节如果出了问题。可能潜在的难点就是需要对操作系统和程序编译运行的原理稍有了解，但是这一定是投资一次收获多次的努力，而且它也真的没有特别难的：）</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>综上所分析，硬件上我准备的有：</p><ul><li>Ubuntu 18.04 系统的计算机</li><li>NUCLEO-F429ZI开发板</li><li>TypeA-MicroB的线</li></ul><p>软件上需要的准备有：</p><ul><li>可能需要预备一些环境<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential</span><br><span class="line">sudo apt-get install libusb-1.0.0-dev</span><br></pre></td></tr></table></figure></li><li>交叉编译工具<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gcc-arm-none-eabi gdb-multiarch</span><br></pre></td></tr></table></figure><ul><li>注：似乎Ubuntu 18.04之前的版本需要的是<code>gdb-arm-none-eabi</code>，Ubuntu 18.04合并到了<code>gdb-multiarch</code>。[1]</li></ul></li><li>firmware library<ul><li><a href="https://github.com/libopencm3/libopencm3/" target="_blank" rel="noopener">LibOpenCM</a>: 支持相当多的芯片型号（具体见他们的README），STMF4系列也在支持范围内。</li><li>安装：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;libopencm3&#x2F;libopencm3&#x2F;</span><br><span class="line">cd libopencm3</span><br><span class="line">make</span><br></pre></td></tr></table></figure></li></ul></li><li><a href="https://github.com/texane/stlink" target="_blank" rel="noopener">stlink</a><ul><li>目前支持STLINKv1, v2, v2-1</li><li>安装：（需要预先安装cmake，c compiler和libusb，详见<a href="https://github.com/texane/stlink/blob/master/doc/compiling.md" target="_blank" rel="noopener">此</a>）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;texane&#x2F;stlink</span><br><span class="line">cd stlink</span><br><span class="line">make release</span><br><span class="line">cd build&#x2F;Release</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><p>正好libopencm3库附带了一个简单的<a href="https://github.com/libopencm3/libopencm3-miniblink" target="_blank" rel="noopener">使小灯闪烁的实例教程</a>，我就直接拿这个来学习了。</p><p>首先把开发板和通过TypeA-MicroB线和计算机连接起来。<br>然后执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;libopencm3&#x2F;libopencm3-miniblink.git</span><br><span class="line">cd libopencm3-miniblink</span><br><span class="line">make</span><br><span class="line">st-flash write bin&#x2F;stm32&#x2F;nucleo-f429zi.bin 0x8000000</span><br></pre></td></tr></table></figure><ul><li>0x800 0000是flash memory的开始映射位置，可以从官方文档<a href="http://www.st.com/resource/en/datasheet/stm32f429zi.pdf" target="_blank" rel="noopener">stm32f439zi型号的数据表</a>看到（在第5节memory mapping的图中）。其实所有stm32系列的芯片的flash memory都是从0x800 0000开始的。</li></ul><img src="/2020/03/22/embedded-dev-beginner/memory-mapping.jpg" class=""><ul><li>最后一步可能出现的错误是Couldn’t find any ST-Link/V2 devices，尝试把开发板连接到电脑的USB 2.0的端口，而不是3.0的端口可解决问题。（小tip：可以通过端口的颜色辨认是2.0还是3.0）<br><img src="https://i.ytimg.com/vi/p7qP_qtaisA/maxresdefault.jpg" alt="USB 2.0 和 3.0 的区别"></li></ul><p>That’s it! 这时候你应该可以看到小灯Led2在闪烁啦。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是一篇从程序员的角度出发的，以小灯闪烁的代码为例，侧重讲解如何在Linux上使用开源工具链配置嵌入式开发的环境的一篇入门教程。下一篇我们会进一步分析这篇博客用到的小灯闪烁的代码。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>[1] <a href="https://askubuntu.com/questions/1031103/how-can-i-install-gdb-arm-none-eabi-on-ubuntu-18-04-bionic-beaver" target="_blank" rel="noopener">https://askubuntu.com/questions/1031103/how-can-i-install-gdb-arm-none-eabi-on-ubuntu-18-04-bionic-beaver</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章是自己刚刚入坑嵌入式开发的一点总结和分享，内容非常基础，只讲到如何成功在开发板上运行一个最简单的使小灯闪烁的程序为止（类似hello world）。我算是有一些computer science的基础，但是对于嵌入式开发来说是纯新手，所以这篇文章更侧重从程序员的视角来
      
    
    </summary>
    
    
    
      <category term="Open Source" scheme="https://atlasquan.github.io/tags/Open-Source/"/>
    
      <category term="Embedded" scheme="https://atlasquan.github.io/tags/Embedded/"/>
    
      <category term="Nucleo" scheme="https://atlasquan.github.io/tags/Nucleo/"/>
    
  </entry>
  
  <entry>
    <title>记一次开源信仰者艰难选购平板的经历</title>
    <link href="https://atlasquan.github.io/2020/03/06/choose-a-tablet/"/>
    <id>https://atlasquan.github.io/2020/03/06/choose-a-tablet/</id>
    <published>2020-03-06T15:25:57.000Z</published>
    <updated>2021-09-27T18:33:32.673Z</updated>
    
    <content type="html"><![CDATA[<p>先说结论吧，unfortunately，真的没有合适的选择。</p><a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于日益增长的学习需求逐渐不能被laptop满足，遂考虑购入一款tablet。</p><p>选购的平板需要满足以下需求：</p><ul><li>便携</li><li>阅读文档和记笔记</li><li>（optional）日常浏览网页</li></ul><p>选购的原则是<strong>注重隐私</strong>和<strong>开源</strong>。</p><h2 id="选购经历"><a href="#选购经历" class="headerlink" title="选购经历"></a>选购经历</h2><p>说是买平板，其实倒也没有一定局限于平板，主要还是看是否可以满足需求，所以最后考察了以下三类产品：</p><ul><li>e-ink tablet</li><li>2 in 1 tablet</li><li>普通的tablet  </li></ul><p>接下来进一步考察相关产品的特性，并根据选购原则来筛选产品：</p><h3 id="e-ink-tablet"><a href="#e-ink-tablet" class="headerlink" title="e-ink tablet"></a>e-ink tablet</h3><p>就是电子水墨屏的平板，其实日常浏览网页这个需求不算刚需了，所以电子水墨还蛮不错的，护眼又清爽，也没那么多隐私和安全问题。虽然是开源信仰者，但也没有到要求一款e-ink tablet都一定要开源的地步了。所以大体上这是个不错的选择。根据<a href="https://youtu.be/rYF-PIlFomE" target="_blank" rel="noopener">这个测评视频</a>，这类产品做的不错的主要有Sony DPT, Supernote, reMarkable，Boyue Likebook, Onyx Boox。</p><p>问题是，其一，太贵了；其二，水墨屏整体的书写延迟都很高，体验较差。阅读文档和记笔记对我来说是同等重要的，光阅读体验好是不够的。</p><p>personally我还是很看好e-ink tablet这类产品的，希望越做越好，价格也可以在产品成熟之后稍微降下来些吧。</p><h3 id="2-in-1-tablet"><a href="#2-in-1-tablet" class="headerlink" title="2 in 1 tablet"></a>2 in 1 tablet</h3><p>并没有了解到有哪款 2 in 1 的tablet是预装Linux的。毕竟 2 in 1 的产品本身也不算多吧。那退一步Windows操作系统也是可以考虑的，一方面感觉最近几年微软拥抱开源态度有所改善，另一方面Windows系统也可以刷成Linux的。</p><p>考察的品牌有Surface，Lenovo的yoga，还有Dell的 2 in 1 系列。虽然实体店里试过华为的平板和Matebook，使用体验确实不错，但是不打算考虑华为的产品，一个原因是华为这个公司的问题，另一个是对待用户隐私的问题。</p><p>Surface Pro 7和Lenovo的yoga都在实体店里看过，感觉还是太沉了，不合适。没去Dell的实体店看，但估计也是太沉了。</p><p>其实最开始加上二合一的笔记本这个选项本身也比较勉强了，因为我之前也之前也入过一款Surface Pro 4，非常清楚它是如何因为太沉了而滚去吃灰的经历，完全没有特别提高我的生产力。最后还是决定考察这个选项的原因不如说我是抱着希望经过这么多年的发展之后（自从我买苏菲4之后的这些年），二合一的笔记本已经发展的足够轻薄。但是并没有，于是就放弃这个选项了。</p><h3 id="普通的Tablet"><a href="#普通的Tablet" class="headerlink" title="普通的Tablet"></a>普通的Tablet</h3><p>普通的…?我也不知道该怎么分类，反正就是大家一般说起平板想到的那种平板就是了！</p><p>既然是开源信仰，那最差的选项肯定是苹果的产品了…最好的选项是硬件和操作系统都是开源的。苹果的产品从硬件到软件，都非常优秀，而且比起安卓系统安全性也更高，可是最大的问题是整个生态是闭源的。那么相关的另一个问题就是，你相信苹果公司不会窃取用户的隐私吗？但是无奈最好的选项实在可供选择的太少。最后勉强找到这两个不算选项的选项：</p><ul><li><p><a href="https://www.pine64.org/pinetab/" target="_blank" rel="noopener">Pin Tab</a></p><ul><li>一个开源的10英寸的Linux平板。</li><li>其实这个选择还蛮理想的，价格也不贵（Target price for PineTab + keyboard: $99 ($79 for standalone PineTab)）。问题是，我2019年年底看官网说预计2019年年底发行，然后现在2020年已经过去两个月了，还在咕咕咕中，而且官网已经不写预计什么时候发行了。</li></ul></li><li><p><a href="https://www.trustedreviews.com/reviews/bq-aquaris-m10-ubuntu-edition" target="_blank" rel="noopener">BQ Aquaris M10 Ubuntu Edition</a></p><ul><li>我就没找见哪能买到这款平板，之前有说是这个<a href="https://store.bq.com/es/ubuntu-edition" target="_blank" rel="noopener">链接</a>，现在已经404，卒。</li></ul></li></ul><p>那么退一步，可以考虑原生Android系统的和可以安装Linux系统的产品。（确实Android的内核是Linux系统，是开源的，但是目前市面上第三方的操作系统…谁知道他们在干什么）</p><ul><li><p>Android原生系统</p><ul><li>Pixel C： 一款Android平板，可惜Google已经不生产了，转向生产Chrombook。</li><li>Chromebook系列： 那不就又变成了2 in 1，还是很沉的啊。而且也还没搞懂Chrome OS到底是部分开源还是全部开源。</li></ul></li><li><p>安装Linux系统</p><ul><li>在查找关于在Android平板上安装Linux系统的时候倒是发现不少有趣的东西（也许是古董XD）：<ul><li><a href="https://www.linuxondex.com/" target="_blank" rel="noopener">Linux on Dex</a>: 看起来是可以在桌面端运行Linux系统的一种服务。但是不符合我的需求。不过反正Linux已经停止支持该服务了…</li><li><a href="https://devices.ubuntu-touch.io/" target="_blank" rel="noopener">Ubuntu Touch</a>：一个为移动端版本的Ubunu。这个看起来蛮有希望的，不过官网上列举的支持的设备版本看起来也太古董了吧，而且也没有平板设备。卒。</li><li>是否有直接安装Linux系统的可能？<ul><li>查阅一些相关资料，根据这个<a href="https://segmentfault.com/q/1010000014378777" target="_blank" rel="noopener">链接</a>，因为Android手机都是闭源硬件，所以没有可能刷成Linux发行版（除非移动设备厂商支持）。现阶段Android手机用Linux方案有两种：<ul><li>基于模拟器：Limbo Emulator</li><li>基于chroot容器：Linux Deploy</li></ul></li><li>但是这两种方案把Android板当作开发工具还能凑活用，作为日常浏览文档做笔记的解决方案感觉还是太heavy了，手写的适配效果肯定也不好，我何必呢……</li></ul></li></ul></li></ul></li></ul><p>那我们继续退……就矮子里拔将军吧。</p><p>根据我们讨论到现在的平板里，华为和苹果已经移除选项。于是我把目光转向了三星。一个原因是S pen已经做了很多年，技术相对成熟，符合我做笔记的需求。另一个原因是，如果一定要被窃取隐私的话，考虑到三星的平板不算是很主流的选择，那把隐私数据给三星算不算某种程度对其他主流的科技巨头公司的制衡呢（我真是逻辑鬼才）。所以最后就选择了<a href="https://www.samsung.com/cn/tablets/galaxy-tab-s6/SM-T860NZAACHN/" target="_blank" rel="noopener">Galaxy Tab S6</a> 这款平板。很轻，性能上也符合我的需求。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>结论一开始就说了，最后我还是买了Galaxy Tab S6，但真的不是理想的选择。太难了。想退圈了。等Pin Tab发布吧。</p><p>唉，说正经的，当然是希望能有更多人参与到Linux的移动设备的开发中来，把移动设备的开源生态搞起来。某种程度上，生态环境就像基础设施，自由的基础设施很重要。It matters. </p><p>路漫漫，我们一起，继续努力。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先说结论吧，unfortunately，真的没有合适的选择。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Tablet" scheme="https://atlasquan.github.io/tags/Tablet/"/>
    
      <category term="Linux" scheme="https://atlasquan.github.io/tags/Linux/"/>
    
      <category term="Open Source" scheme="https://atlasquan.github.io/tags/Open-Source/"/>
    
  </entry>
  
  <entry>
    <title>重新开始经营博客</title>
    <link href="https://atlasquan.github.io/2020/03/04/restart-blog/"/>
    <id>https://atlasquan.github.io/2020/03/04/restart-blog/</id>
    <published>2020-03-04T23:36:59.000Z</published>
    <updated>2021-09-27T18:33:32.685Z</updated>
    
    <content type="html"><![CDATA[<p>想要重新开始经营博客的契机是偶然看到<a href="https://printempw.github.io/friends/" target="_blank" rel="noopener">prin的博客</a>里的一句话吧：</p><blockquote><p>和 Medium、简书之类的写作平台不同，每一个独立博客都是一个信息孤岛。我们没有类似「你可能喜欢其他人写的这些文章」的推荐机制……</p></blockquote><p>是早就知道但是常常忘记的道理。尤其是在最近快要被各种平台疯狂推荐“你可能喜欢的”逼到自闭的时候，突然看到这句话突然深感安慰。</p><a id="more"></a><p>推荐机制听起来很好，可以贴心的推送你可能喜欢的内容，但是我们真的需要知道那么多可能喜欢的内容吗？似乎真实情况是我们在这种推荐机制下焦虑更深，迷失感更强，更异化吧。就算是纯粹的推荐机制都很难讲不存在这些问题，更别说现在市面上的推荐机制大多数都裹挟着消费主义的陷阱，或者推荐的内容本身就是消费主义的产物了。</p><p>啊，可能消费主义盛行的大环境下没有什么平台能幸免吧。YouTube的广告是越来越多，B站自从改版为首页是推荐视频以后越来越味道不对。连github都没注意什么时候多了Explore repositories。刚刚开始用微信阅读意外的感觉读书体验相当好，字体合适，做笔记很顺畅，书籍又多又便宜，用起来以后kindle立刻去吃灰了。可惜最近推荐机制的侵略性越来越强，用起来是越来越累，又打算重新开始用kindle了。就不说微信了，骂过太多次已经骂累了。还有各大平台越来越令人窒息的censorship。</p><p>app若只如初见，那年知乎还不是逼乎，那年我们大喊着哔哩哔哩干杯。俱往矣。那我也只好逃回到独立博客这最后一片净土，把rss那一套重新搞起来了。与其说是在对抗消费主义，不如说逃避消费主义吧。似乎倒有点隐居山林的浪漫（笑）。</p><p>之前写过<a href="/2019/01/04/why-blog/">一篇笔记</a>讲最开始想要搭建这个博客的想法，可以看到最开始是想要经营一个技术博客的，不过现在我改变主意了。既然重新经营博客的动机是对抗/逃避消费主义，那就没有必要局限于技术博文了（说得好像这么久有写些什么技术博文一样）。之后的博文可能就会主题杂一点，日常的多发一点了。一直也有考虑过在个人博客上可以发一些视频或者照片，但是一直没想好合适的host video/images的方法（这个可能就遥遥无期了吧）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想要重新开始经营博客的契机是偶然看到&lt;a href=&quot;https://printempw.github.io/friends/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;prin的博客&lt;/a&gt;里的一句话吧：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;和 Medium、简书之类的写作平台不同，每一个独立博客都是一个信息孤岛。我们没有类似「你可能喜欢其他人写的这些文章」的推荐机制……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;是早就知道但是常常忘记的道理。尤其是在最近快要被各种平台疯狂推荐“你可能喜欢的”逼到自闭的时候，突然看到这句话突然深感安慰。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Chitchat" scheme="https://atlasquan.github.io/tags/Chitchat/"/>
    
  </entry>
  
  <entry>
    <title>无可奈何</title>
    <link href="https://atlasquan.github.io/2019/12/23/no-way/"/>
    <id>https://atlasquan.github.io/2019/12/23/no-way/</id>
    <published>2019-12-23T22:49:00.000Z</published>
    <updated>2021-09-27T18:33:32.685Z</updated>
    
    <content type="html"><![CDATA[<p>无可奈何<br>世间事<br>沉默如迷的未来<br>撕裂的过往<a id="more"></a><br>格格不入的试探<br>纵横交错的热闹<br>无法凝视的深渊<br>转瞬即逝的毁灭<br>和<br>如影随形的虚无</p><p>似曾相识<br>梦中乡<br>繁星密布的夜空<br>黎明的露珠<br>一日四时的云彩<br>一年四季的树叶<br>山巅俯瞰的大地<br>落在鼻尖的雪花<br>和<br>即将入睡的我</p><p>（作者：三七）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无可奈何&lt;br&gt;世间事&lt;br&gt;沉默如迷的未来&lt;br&gt;撕裂的过往
    
    </summary>
    
    
    
      <category term="Poem" scheme="https://atlasquan.github.io/tags/Poem/"/>
    
      <category term="Chitchat" scheme="https://atlasquan.github.io/tags/Chitchat/"/>
    
  </entry>
  
  <entry>
    <title>故事</title>
    <link href="https://atlasquan.github.io/2019/08/12/story/"/>
    <id>https://atlasquan.github.io/2019/08/12/story/</id>
    <published>2019-08-12T22:49:00.000Z</published>
    <updated>2021-09-27T18:33:32.685Z</updated>
    
    <content type="html"><![CDATA[<p>压迫的与被压迫的人们 合力<br>讲着那些自己也快要相信的故事<a id="more"></a><br>明媚而热情的音乐里<br>他们神采奕奕<br>留下抗争的人们痛苦迷失<br>希望的含义就快要忘记<br>没有火焰与温度的燃烧里<br>埋葬了自己</p><p>(作者：三七)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;压迫的与被压迫的人们 合力&lt;br&gt;讲着那些自己也快要相信的故事
    
    </summary>
    
    
    
      <category term="Poem" scheme="https://atlasquan.github.io/tags/Poem/"/>
    
      <category term="Chitchat" scheme="https://atlasquan.github.io/tags/Chitchat/"/>
    
  </entry>
  
  <entry>
    <title>探讨当前本科生毕业论文制度的问题</title>
    <link href="https://atlasquan.github.io/2019/06/08/cancel-undergra-thesis/"/>
    <id>https://atlasquan.github.io/2019/06/08/cancel-undergra-thesis/</id>
    <published>2019-06-08T12:48:09.000Z</published>
    <updated>2021-09-27T18:33:32.673Z</updated>
    
    <content type="html"><![CDATA[<p>我认为应该针对本科生，取消以设置一学期时间用于毕业设计，并主要以论文为评判标准的模式，但并不反对其他模式的毕业考核。</p><ul><li><p>本质的问题1：大部分本科生没有足够的独立完成一篇论文的能力，而老师也明白学生没有这种能力，但这种事情不可能拿到明面上说，这就导致了大部分学生和学校（大部分老师）都在走形式，衍生出一系列的潜规则和互相浪费时间的事情。</p></li><li><p>本质的问题2：用论文形式考核所有的专业并不合适。</p></li></ul><ul><li>潜规则1：流程上的要求被模糊的执行。</li></ul><p>很多流程都被形式化的模糊的执行，这产生了很多最终让学生很为难的情形。大部分老师对毕业设计不重视，从选题到中期报告的提交等流程都不严谨，导致有的学生答辩时才被要求更换题目，有的学生答辩时才被告知没有体现在《xxx本科毕业设计（论文）工作条例（2018年11月修订）》里的其他论文要求，有的表格文件处理有误，有的事件时间通知有误……但是流程上的要求被模糊的执行绝不仅仅是说明，问题的本质在于对规则的执行不严格，更重要的是当前的毕业设计模式本身。</p><ul><li>潜规则2：以形式上的刻板要求，掩盖对论文内容与学术其他能力的考核不足。</li></ul><p>老师大都心知肚明本科生的研究很难有学术价值与创新性，但是通常出于“显得学生的毕业论文像一篇真正的学术论文”与“显得校方与学生都学术态度很端正”的目的，从而最终审核的时候，学校对学生的论文格式、章节命名、论文中体现的代码量等，都有刻板的要求，这些要求有时超过了对论文本身学术性的要求。为此，学生做毕业设计的过程中，常常不得不由学术研究转变为迎合潜规则。这不符合毕业设计的初衷，也不是值得追求的学术风气。</p><ul><li>潜规则3：对本校读研的学生和非本校读研的学生要求不同。</li></ul><p>尽管《xxx本科毕业设计（论文）工作条例（2018年11月修订）》第四章明确指出指导教师应该“注意克服对学生重使用、轻培养的现象”，但是对于本校读研的同学跟随的导师大部分来说，大部分都是重使用轻培养，丝毫不重视学生的毕业设计。最终答辩时对本校读研的学生和非本校读研的学生的严格程度通常也不同，非本校读研的学生往往受到更高的要求。无论从对学生的培养角度，还是学术的严谨与公平公正的角度，这样做都不合适。我认为，如当前这样一学期的时间安排与毕业考核形式，恰恰在助长这种风气。</p><hr><p>我不明白，为什么要用一学期的时间，大家一起自导自演一场像现在这样的毕业设计？我不认为当下的毕业设计起到了《xxx本科毕业设计（论文）工作条例（2018年11月修订）》总则中提到的希望达到的目的，甚至事与愿违。我希望，针对本科生取消以设置一学期时间用于毕业设计，并主要以论文为评判标准的模式。我并不反对其他模式的毕业考核，我认为更符合专业特点的毕业考核模式才更值得提倡。我希望《xxx本科毕业设计（论文）工作条例（2018年11月修订）》总则中提到的希望达到的目的，可以真正以某种方式实现。</p><hr><p>更新于2020.3.5：</p><ul><li>本文中大学名称已匿，但我相信文中所提出的观点不局限于特定大学。</li><li>如今回过头来看这篇文章，依然同意文中所提出的观点和所指出的问题。但是对于之前最后的结论落脚到取消毕业论文感觉还是稍显悲观了。所以从文章名由《【呼吁】本科生应该取消毕业论文》更改为《探讨当前本科生毕业论文制度的问题》（内容未作更改）。当时写这篇文章的时候，想法上更悲观一些，觉得大学教育上一系列的结构性问题积重难返，那么已经到大四了，不如说取消一学期的论文制度还能抢救一下。但是冷静下来想想，既然是积重难返，就算呼吁取消毕业论文也解决不了问题，只是悲观地表达了一种对抗态度。甚至落脚到对取消毕业论文的呼吁上，可能还显得有点哗众取宠，掩盖了真正想探讨的当前大学教育背后的复杂的问题。</li></ul><p>（作者：三七 头盖骨）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我认为应该针对本科生，取消以设置一学期时间用于毕业设计，并主要以论文为评判标准的模式，但并不反对其他模式的毕业考核。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本质的问题1：大部分本科生没有足够的独立完成一篇论文的能力，而老师也明白学生没有这种能力，但这种事情不可能拿到明面上说，这就
      
    
    </summary>
    
    
    
      <category term="Misc" scheme="https://atlasquan.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>破碎又重建的记忆碎片里我成为了谁</title>
    <link href="https://atlasquan.github.io/2019/01/28/fade-self/"/>
    <id>https://atlasquan.github.io/2019/01/28/fade-self/</id>
    <published>2019-01-28T23:36:59.000Z</published>
    <updated>2021-09-27T18:33:32.677Z</updated>
    
    <content type="html"><![CDATA[<p>按下了不知道是响了第多少次的闹铃，睁着眼睛呆呆的望着天花板的吊灯，余光瞥见透过窗帘缝隙的刺眼的阳光，可是我却丝毫没有想要下床拉开窗帘开始新的一天的意愿。</p><p>空虚无聊中拿起手机翻着票圈。张三拿到了斯坦福的offer，李四又在推销法国的红酒，王五周末和老婆女儿一起去看了电影……手指随意地滑过这些动态，随意的点赞。这些人这些故事，我其实一点也不想知道，只是我现在太想找些打发时间让今天快点结束的事情做。</p><p>我的女神昨夜庆祝了自己25岁生日，动态里配了一张和两个初中就认识的好姐妹一起干杯的图，背景看得出是她的家里，附的文字是一些回顾过去展望未来的美好祝词。中规中矩的小日常里透着些许温暖，一如她往昔所有的票圈。</p><p>她的票圈里永远正能量满满，不是晒自己健身的图片就是晒和她的一个亲弟弟一起打游戏或者遛他们家的大狗的姐弟情，或者就是和一两个小姐妹一起玩乐器的闺蜜情，再或者就是跟进一下人工智能技术的最新动态。</p><p>我视她为我的女神并不是因为大众意义上的对她的欣赏，比如肤白貌美或者品学兼优之类的，只是因为无论她票圈里晒什么都会透露出的“永远单身“的自信深深的吸引着我。我常常在想她周围的人到底怎么看待她，她又怎么看待自己，比如她平常会思考的问题和我思考的有什么区别吗。</p><p>我常常思考自杀，不，我并不想死，我只是在想自杀本身这件事。比如我现在就在想，如果每天的刚开始我就在思考这一天什么时候可以结束，那真的等这一天结束了又怎么样呢？我有什么非要等到的东西吗？如果没有我又何必要等呢，为什么不就在现在结束自己的生命呢？为什么相反要熬过这些我从刚开始就希望可以结束的一天又一天呢？可是问题是我不想死啊。</p><p>我是知道她周围的人怎么看待她的。我问过她的同事，他们说她能文能武，声音很温柔唱歌很好听人又漂亮而且专业能力很强，托付给她写的代码大家都很放心。我问过她周围的朋友，他们说她高度自律，让人羡慕，特别是她性格超好，为人热心，还特别幽默，和她相处很舒服。我问过她的弟弟，他说他的姐姐是三次元世界里最可爱的人，和他很聊的来。</p><p>她的同事朋友和弟弟对她的看法我也深有同感，是啊，我的女神就是这样的人啊。可是正如我之前所说，她之所以是我的女神不是因为这些，而是因为我感受的到她尽自己所有努力去尝试了一切办法让自己沉浸在生活里，去学着感受生活，依恋生活，从而可以拥有一种从里到外的“永远单身”的自信。</p><p>我不知道为什么我会对“永远单身”的气质这么着迷，如果一定去分析些什么原因的话，我想是因为我喜欢这种勇敢的对抗着人生和世界的真相的姿态，既裹挟着勇气也蕴含着智慧。</p><p>我不知道我是羡慕她的勇气还是欣赏她的勇气，因为我甚至都搞不清楚自己是真的不想死还是不敢死。一想到这我更希望今天快点结束了。</p><p>时常我也很矛盾，一方面我自己很享受思考这些问题，思考终极问题带给人的满足感是远远超越物质层面的，但另一方面思考这些问题让我很消极很疲劳。所以有时候我也觉得，与其思考这些问题，不如强迫自己思考一下当自己去干什么的时候不太可能会思考这些问题。我暗自琢磨着她是不是也是因为时常会被无边的终极问题消耗掉生存的意志，所以才这么努力的去寻找沉浸在生活里，扎根在生活里的办法。</p><p>闹铃又响了一遍。昨天过生日和姐妹们闹得稍微有点晚，到现在还有点头疼。可是这次我真的该起床了，再不起床约的健身课就要迟到了。而且我正好有点想起床打开电脑记录一下刚刚在床上乱七八糟的思绪了。</p><p>打开电脑后我先漫无目地信手点击翻阅了一会从前写过的只言片语。从前写过的文字我大都没忘，而且几乎都翻阅过很多遍，但不知为何依然很享受翻阅自己从前文字的感觉，有一种静谧又自由的归属感。</p><p>诶，我怎么又打开了这篇刚刚打算转行到人工智能领域的时候写得一篇日记：</p><blockquote><p>不过是<strong>终将成为你</strong><br>或者<strong>终将成为你喜欢的人的模样</strong><br>的卑微到尘埃里的无聊故事</p><p>你喜欢动漫那我去看<br>她喜欢乐器那我去学<br>你喜欢健身那我去练<br>她喜欢跳舞那我去跳<br>你喜欢游戏那我去玩<br>她喜欢宠物那我去养</p></blockquote><blockquote><p>你喜欢人工智能那我转行</p></blockquote><hr><p>故事到这里你们也猜到了，她就是我。</p><p>有时空旷的夜里我偶尔也回想起那些年和那些人互诉过的衷肠，看着柜子里的手办，床边的吉他，熟睡的Baku（我门家的大狗），会有一点点焦虑，不断反问自己，纯粹属于我喜欢的东西又有什么。无数个瞬间里有一种自己已经在很多年前把自己杀死了的恍惚错觉，更糟的是我清楚的记得一步步走到今天的我是抱着怎么样的决绝的心情，尽管我一点也说不上来我非要这么做的理由。</p><p>可是如果被杀掉的是我，那杀掉我的就不是我了吗？</p><p>所谓纯粹，真的是存在于这个世间的概念吗？哪有什么纯粹啊……你说你喜欢成为一名厨师，其实是因为你不记得的小时候你自己炒的鸡蛋被你妈妈夸奖过，这难道可以算是“纯粹”的你喜欢的东西吗？</p><p>无论动漫游戏还是音乐舞蹈，或者我亲爱的Baku，到现在来说，我确实是真的喜欢啊。我早已放下了他，当我再做这些事情的时候我不是因为想起了他才觉得这些有意义，而是我真的可以从这些活动中获得安慰和乐趣。是它们支撑着我走过这一天又一天，</p><p>这些刚刚开始我就想着要结束的一天又一天，而不是他。</p><p>我是谁？纯粹的我是谁？重要吗？我想不清。<br>但是我清楚我该出发去健身房了。</p><p>【全文虚构，旨在探索什么是我的话题。如有雷同，纯属巧合】<br>(作者：三七)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;按下了不知道是响了第多少次的闹铃，睁着眼睛呆呆的望着天花板的吊灯，余光瞥见透过窗帘缝隙的刺眼的阳光，可是我却丝毫没有想要下床拉开窗帘开始新的一天的意愿。&lt;/p&gt;
&lt;p&gt;空虚无聊中拿起手机翻着票圈。张三拿到了斯坦福的offer，李四又在推销法国的红酒，王五周末和老婆女儿一起去
      
    
    </summary>
    
    
    
      <category term="Chitchat" scheme="https://atlasquan.github.io/tags/Chitchat/"/>
    
  </entry>
  
</feed>
